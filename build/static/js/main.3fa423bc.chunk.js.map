{"version":3,"sources":["redux/reducers/userReducer.js","redux/store/combineReducers.js","redux/store/index.js","components/BottomNavigation/index.js","utils/constants.js","components/header/sub-header.js","components/layout/layout.js","userDataFunctions.js","components/SellModal/sellModal.js","components/buyModal/styles.js","components/buyModal/index.js","components/Dashboard/Dashboard.js","utils/TronHelper.js","components/stakeModal/stakeModal.js","components/unStakeModal/unStakemodal.js","components/stacks/react-timer-hook.js","components/pausedTransactionsTable/index.js","components/stacks/stacks.js","components/wallet/styles.js","components/wallet/index.js","components/Swaping/styles.js","components/swipeModal/swipeModal.js","components/Swaping/index.js","components/transactions/styles.js","components/transactions/index.js","components/withdraw/styles.js","components/withdraw/index.js","DashboardRoutes.js","components/Register/SignIn.js","mainApp.js","App.js","reportWebVitals.js","index.js"],"names":["initState","isUserAuthenticated","currentUserStatus","userAccountAddress","metaMaskDecentralized","oneTokenPrice","eatherInUsdt","userPersonalBalance","totalReferralsCount","earnings","totalWithdrawn","availableWithdrawn","atStake","registeredDate","userWalletEthBalance","bonusBalanceAndAvailableRefReward","withdrawRef","totalReward","allRecentReferrals","allRecentStake","waveCurrentPrice","stakingDcentralized","withoutwaveCurrentPrice","supplyValue","rootReducer","combineReducers","UserReducer","state","action","type","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useStyles","makeStyles","theme","root","textDecoration","color","flexGrow","width","outline","boxShadow","border","navbar","position","bottom","height","backgroundColor","favIcon","borderRadius","zIndex","breakpoints","up","right","down","left","selected","BottomNav","useTheme","classes","history","useHistory","React","useState","value","setValue","anchorEl","ids","useLocation","pathname","useRef","open","Boolean","Container","className","Hidden","mdUp","AppBar","Grid","container","mx","item","xs","BottomNavigation","onChange","event","newValue","clsx","showLabels","BottomNavigationAction","to","component","NavLink","activeClassName","label","icon","style","fontSize","onClick","push","cursor","src","top","aria-describedby","localStorage","removeItem","dispatch","location","reload","contractAddress","swapingAddress","approveSwapingAddress","Hcontainer","display","box","paddingTop","paddingBlockStart","btn","float","marginTop","btnRef","contactBox","transition","backgroundImage","backgroundSize","opacity","textAlign","justifyContent","Dashboard_boxButton","background","lineHeight","fontFamily","item2","order","RLogo","item3","SubHeader","price1","setV1Price","price2","setV2Price","useMediaQuery","useSelector","useEffect","console","log","getItem","alignItems","lg","md","sm","Box","box1","m","p","flexDirection","target","href","slice","length","Layout","props","pb","children","TotalRewardsFunction","Web3","givenProvider","metaMastAcc","dcentralized","a","modal","paper","shadows","padding","spacing","maxHeight","maxWidth","header","formField","borderColor","clearBtn","withDrawBtn","marginLeft","paddingRight","SellPopup","handleReloadValues","handleClose","numberOfTokens","setNumberOfTokens","loader","setLoader","sellTokens","setSellTokens","getReducer","tronToToken","tronWeb","contract","at","Promise","resolve","reject","trontotoken","call","tronToTokens","v","BuyTokenFunction","tronValue","send","feeLimit","shouldPollResponse","then","output","setItem","toast","success","catch","e","error","message","handleChangeValue","Modal","aria-labelledby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","IconButton","Close","TextField","id","variant","Typography","Button","BuyPopup","buyTokens","setButTokens","tokenTOTrons","tokenToTron","tokenTOTron","warning","document","getElementById","URL","referalAddress","callValue","t","palette","text","secondary","IconSvg","verticalAlign","box_Ions","boxColor","Dtt_box","fontWeight","backgroundPosition","Dashboard","setOpen","openbuy","setOpenbuy","ChargeV2Balance","setChargeV2Balance","bonus","setBonus","reffrals","setReffrals","start","setStart","setWithdrawRef","contractBalnce","setContractBalnce","walletBalance","setWalletBalance","userAmountOfDeposits","setUserAmountOfDeposits","userDividends","setUserDividends","usdRate","setUsdRate","price","setPrice","axios","get","res","cryptos","data","USD","balanceOf","totalReferals","refusers","getUserTotalDeposits","UAmountOfDeposits","getUserDividends","uDividends","trx","getAccount","tradeobj","priceObj","getContractBalance","contractBlnce","_hex","balance","setTimeout","pt","parseFloat","toFixed","fullWidth","moment","unix","format","paddingBottom","Input","protocol","host","readonly","select","execCommand","StakPopup","handleUpdateValues","getDate","setGetDate","invest","FormControl","formControl","Select","native","inputProps","name","UnStakeModal","MyTimer","expiryTimestamp","useTimer","onExpire","warn","seconds","minutes","hours","days","isRunning","pause","resume","restart","App","timeStamp","time","Date","setSeconds","getSeconds","withStyles","head","common","white","body","TableCell","hover","TableRow","Stacks","useStyles2","flexShrink","table","minWidth","openStake","setOpenStake","openUnstake","setOpenUnStake","totalMaxRewards","setTotalMaxRewards","setTotalReward","setTotalWithdrawn","setBonusBalanceAndAvailableRefReward","repeatedelyGetUserStake","userDiv","getUserReferralBonus","contract1","UWithdraw","setInterval","getContractTransferEventsByUser","page","setPage","rowsPerPage","setRowsPerPage","rows","setRows","eventName","result","tronGrid","TronGrid","getEvents","only_confirmed","event_name","limit","newArr","totalMaxReward","forEach","element","address","fromHex","user","d","Duration","calculatedMaxReward","amount","parseInt","transaction_id","token","duration","userId","block_timestamp","maxReward","emptyRows","Math","min","tableBox","TableContainer","Paper","tableTransparnet","Table","aria-label","TableHead","tableHeader","align","TableBody","tableBody","map","row","scope","add","toISOString","colSpan","TableFooter","TablePagination","rowsPerPageOptions","count","SelectProps","onChangePage","newPage","onChangeRowsPerPage","ActionsComponent","TablePaginationActions","disabled","direction","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","ceil","max","card","borderBottom","Wallet","setUserPersonalBalance","SetAtStake","filters","res2","res3","source","newAr","sort","b","index","toString","loaderFor","setLoaderFor","setDisabled","setAllowance","toChargeV2","setToChargeV2","SwappingTokens","swapping","ApproveTokens","allowance","vRes","vRes2","approve","getAllowance","chargeV1ToChargeV2","ChargeV1ToChargeV2","changeInputValue","Swaping","PriceOfChargeV2","resChargeV2","PriceOfChargeV1","resChargeV1","chargeV1","chargeV2","button","dropDown","cirlceBox","cirlceIcon","transform","notFound","marginRight","selectBox","searchBtn","buyIcon","outlineBtn","Transactions","setEventName","handleOpen","block_number","labelId","MenuItem","stackBox","field","fieldLeft","paddingLeft","tableContainer","fieldRight","borderLeft","bottomBox","WithDraw","getUserTotalWithdrawn","WithDrawStake","withdraw","WithdrawRefReward","withdrawRefferalReward","marginBottom","drawerWidth","appBar","drawer","transitions","create","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","hide","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","mixins","content","dashboardBackGroundColor","DeawerColor","DashboardRoutes","match","path","matches","links","title","smDown","CssBaseline","Toolbar","edge","Drawer","Divider","List","ListItem","ListItemIcon","ListItemText","primary","getFullYear","exact","avatar","margin","main","form","submit","SignUpColor","mt","SignUp_boxButton","SignIn","useDispatch","Ethereum","mainAccount","defaultAddress","base58","LoginFunction","url","q","URLSearchParams","search","AuthRoute","Component","authUser","rest","useParams","render","MainApp","getCurrentWallet","getWalletAddress","createMuiTheme","borderColors","includes","final","split","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3fa423bc.chunk.js","sourcesContent":["let initState = {\n  isUserAuthenticated: false,\n  currentUserStatus: \"\",\n  userAccountAddress: \"\",\n  metaMaskDecentralized: {},\n  oneTokenPrice: \"\",\n  eatherInUsdt: \"\",\n  userPersonalBalance: \"\",\n  totalReferralsCount: \"\",\n  earnings: \"\",\n  totalWithdrawn: \"\",\n  availableWithdrawn: \"\",\n  atStake: \"\",\n  registeredDate: \"\",\n  userWalletEthBalance: \"\",\n  bonusBalanceAndAvailableRefReward: \"\",\n  withdrawRef: \"\",\n  totalReward: \"\",\n  allRecentReferrals: \"\",\n  allRecentStake: \"\",\n  waveCurrentPrice: \"\",\n  stakingDcentralized: \"\",\n  withoutwaveCurrentPrice: \"\",\n  supplyValue: null,\n};\n\nexport const UserReducer = (state = initState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case \"SUPPLY_VALUE\":\n      return {\n        ...state,\n        supplyValue: payload,\n      };\n    case \"METAMASK_STAKING_DCENTRALIZED\":\n      return {\n        ...state,\n        stakingDcentralized: payload,\n      };\n    case \"ChargeV2_CURRENT_PRICE\":\n      return {\n        ...state,\n        waveCurrentPrice: payload,\n      };\n\n    case \"WITHOUT_ChargeV2_CURRENT_PRICE\":\n      return {\n        ...state,\n        withoutwaveCurrentPrice: payload,\n      };\n\n    case \"STORE_ALL_STAKES\":\n      return {\n        ...state,\n        allRecentStake: payload,\n      };\n    case \"RECENT_ALL_REFERRALS\":\n      return {\n        ...state,\n        allRecentReferrals: payload,\n      };\n    case \"TOTAL_REWARD\":\n      return {\n        ...state,\n        totalReward: payload,\n      };\n    case \"REFERRAL_TOTAL_WITHDRAWN\":\n      return {\n        ...state,\n        withdrawRef: payload,\n      };\n    case \"BONUS_BALANCE_AND_REFERRAL_WITHDRAW\":\n      return {\n        ...state,\n        bonusBalanceAndAvailableRefReward: payload,\n      };\n    case \"USER_ETH_WALLET_BALANCE\":\n      return {\n        ...state,\n        userWalletEthBalance: payload,\n      };\n    case \"START_DATE\":\n      return {\n        ...state,\n        registeredDate: payload,\n      };\n    case \"AT_STAKE\":\n      return {\n        ...state,\n        atStake: payload,\n      };\n    case \"USER_TOTAL_WITHDRAWN\":\n      return {\n        ...state,\n        totalWithdrawn: payload,\n      };\n\n    case \"AVAILABLE_WITHDRAWN\":\n      return {\n        ...state,\n        availableWithdrawn: payload,\n      };\n    case \"EARNINGS\":\n      return {\n        ...state,\n        earnings: payload,\n      };\n    case \"TOTAL_REFERRALS_COUNT\":\n      return {\n        ...state,\n        totalReferralsCount: payload,\n      };\n    case \"USER_PERSONAL_BALANCE\":\n      return {\n        ...state,\n        userPersonalBalance: payload,\n      };\n    case \"EATHER_IN_USDT\":\n      return {\n        ...state,\n        eatherInUsdt: payload,\n      };\n    case \"ONE_TOKEN_PRICE\":\n      return {\n        ...state,\n        oneTokenPrice: payload,\n      };\n    case \"USER_METAMASK_ACCOUNT\":\n      return {\n        ...state,\n        userAccountAddress: payload,\n      };\n    case \"METAMASK_DECENTRALIZED\":\n      return {\n        ...state,\n        metaMaskDecentralized: payload,\n      };\n    case \"USER_AUTHENTICATED\":\n      return {\n        ...state,\n        isUserAuthenticated: true,\n        currentUserStatus: \"done\",\n      };\n    case \"AUTHENTICATED_FAILED\":\n      return {\n        ...state,\n        isUserAuthenticated: false,\n        currentUserStatus: \"not done\",\n      };\n\n    case \"LOGOUT\":\n      return {\n        ...state,\n        isUserAuthenticated: false,\n        currentUserStatus: \"not done\",\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { UserReducer } from \"../reducers/userReducer\";\n\nconst rootReducer = combineReducers({\n  UserReducer,\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./combineReducers\";\n\n// compose are enhancers used for composing middlewares for redux\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n};\n\nconst store = configureStore();\n\nexport default store;\n","import React, { useRef } from \"react\";\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n  Popover,\n  Box,\n  useTheme,\n  Grid,\n  Container,\n  AppBar,\n  Tabs,\n  Tab,\n  Typography,\n  Hidden,\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { Link, useHistory, useLocation, NavLink } from \"react-router-dom\";\nimport { FaUsers, FaHandHoldingUsd, FaWallet } from \"react-icons/fa\";\nimport { BiTransfer } from \"react-icons/bi\";\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\n\nimport { MdSecurity, MdSettings, MdAssessment } from \"react-icons/md\";\nimport { AiTwotoneFileText } from \"react-icons/ai\";\nimport \"./index.css\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport store from \"../../redux/store\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textDecoration: \"none\",\n    color: \"white\",\n    flexGrow: 1,\n    width: \"100%\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n      border: \"none\",\n      textDecoration: \"none\",\n    },\n    \"&:hover\": {\n      textDecoration: \"none\",\n    },\n  },\n  navbar: {\n    position: \"fixed\",\n    bottom: \"0%\",\n    height: \"74px\",\n    width: \"100%\",\n    backgroundColor: \"#27273D\",\n    boxShadow: \"0px 4px 8px #04041747 !important\",\n  },\n  favIcon: {\n    borderRadius: 100,\n    zIndex: 3000,\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      width: \"4rem\",\n      bottom: 40,\n      right: 40,\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      position: \"absolute\",\n      bottom: 40,\n      right: 40,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      position: \"absolute\",\n      bottom: 30,\n      left: 1,\n    },\n  },\n\n  selected: {\n    color: \"white\",\n  },\n}));\n\nexport default function BottomNav() {\n  const theme = useTheme();\n  const classes = useStyles();\n  const history = useHistory();\n  const [value, setValue] = React.useState();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const { pathname } = useLocation();\n  const ids = useRef(\"simple-popover\");\n  const anchorPositions = { top: 390, left: 900 };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"_DTL_LOGIN_ADDRESS\");\n    store.dispatch({\n      type: \"LOGOUT\",\n    });\n    window.location.reload();\n  };\n\n  return (\n    <Container className=\"bottom_navi_gation\">\n      <Hidden mdUp>\n        <AppBar>\n          <Grid container mx>\n            <Grid item xs={12}>\n              <BottomNavigation\n                value={value}\n                onChange={handleChange}\n                className={clsx(classes.navbar)}\n                showLabels\n              >\n                {/* <BottomNavigationAction to=\"/Dashboard\" component={NavLink} activeClassName={classes.selected} label=\"Dashboard\" value=\"nearby\" icon={<MdAssessment />} className={clsx(classes.root)} /> */}\n                <BottomNavigationAction\n                  to=\"/wallet\"\n                  component={NavLink}\n                  activeClassName={classes.selected}\n                  label=\"Wallet\"\n                  value=\"nearby\"\n                  icon={<FaWallet />}\n                  className={clsx(classes.root)}\n                />\n                <BottomNavigationAction\n                  to=\"/transactions\"\n                  component={NavLink}\n                  activeClassName={classes.selected}\n                  label=\"Transactions\"\n                  value=\"favorites\"\n                  className={clsx(classes.root)}\n                  icon={<BiTransfer style={{ fontSize: 20 }} />}\n                />\n                <BottomNavigationAction\n                  to=\"/stakes\"\n                  component={NavLink}\n                  activeClassName={classes.selected}\n                  label=\"Stakes\"\n                  value=\"recents\"\n                  className={clsx(classes.root)}\n                  icon={<MdSecurity style={{ fontSize: 20 }} />}\n                />\n                <BottomNavigationAction\n                  to=\"/swaping\"\n                  component={NavLink}\n                  activeClassName={classes.selected}\n                  label=\"Swaping\"\n                  value=\"recents\"\n                  className={clsx(classes.root)}\n                  icon={<SwapHorizIcon style={{ fontSize: 20 }} />}\n                />\n                <div\n                  onClick={() => history.push(\"/\")}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <img\n                    src=\"/wawelogo icon.png\"\n                    style={{\n                      position: \"relative\",\n                      top: -8,\n                      width: \"50px\",\n                      boxShadow:\n                        \"0 3px 6px rgba(0, 0, 0, .3), inset 0 0 10px 3px rgba(0, 0, 0, .2), 0 3px 20px #f6597282, 0 3px 35px rgba(250, 95, 59, 0.48)\",\n                      borderRadius: \"50%\",\n                    }}\n                  />\n                </div>\n\n                {/* <BottomNavigationAction disableRipple={true} to=\"/\" component={Link} icon={<Box  className={classes.favIcon} >\n            <img src=\"logo.png\"  width=\"100\"  className={classes.logo}  alt=\"logo\" />\n          </Box>} className={classes.root} /> */}\n                {/* <BottomNavigationAction to=\"/dashboard/withdraw\" component={NavLink} activeClassName={classes.selected} label=\"Withdraw\" value=\"nearby\" icon={<FaHandHoldingUsd />} className={clsx(classes.root)} /> */}\n                <BottomNavigationAction\n                  to=\"/withdraw\"\n                  component={NavLink}\n                  activeClassName={classes.selected}\n                  label=\"Withdraw\"\n                  value=\"nearby\"\n                  icon={<MdSecurity style={{ fontSize: 20 }} />}\n                  className={clsx(classes.root)}\n                />\n                <BottomNavigationAction\n                  aria-describedby={ids}\n                  onClick={handleLogout}\n                  label=\"Logout\"\n                  value=\"folder\"\n                  icon={<ExitToAppIcon style={{ fontSize: 20 }} />}\n                  className={clsx(classes.root, { [classes.selected]: open })}\n                />\n              </BottomNavigation>\n            </Grid>\n          </Grid>\n        </AppBar>\n      </Hidden>\n    </Container>\n  );\n}\n","export const abi = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"PERCENTS_DIVIDER\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserDownlineCount\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"AdminlockWithdrawl\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserDividends\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"AdmindlockStaking\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [{ name: \"\", type: \"string\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_spender\", type: \"address\" },\n      { name: \"_amount\", type: \"uint256\" },\n    ],\n    name: \"approve\",\n    outputs: [{ name: \"success\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserAvailable\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"AdminlockBuying\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"basepercent3\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"AdminUnlockWithdrawl\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_from\", type: \"address\" },\n      { name: \"_to\", type: \"address\" },\n      { name: \"_amount\", type: \"uint256\" },\n    ],\n    name: \"transferFrom\",\n    outputs: [{ name: \"success\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"destruct\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"amount\", type: \"uint256\" }],\n    name: \"_mint\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [{ name: \"\", type: \"uint8\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"TIME_STEP\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserReferrer\",\n    outputs: [{ name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"\", type: \"uint256\" }],\n    name: \"REFERRAL_LIMITS\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"withdraw\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_value\", type: \"uint256\" }],\n    name: \"burn\",\n    outputs: [{ name: \"success\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalWithdrawn\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"tokenSold\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalInvested\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_value\", type: \"uint256\" }],\n    name: \"balTrx\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"\", type: \"uint256\" }],\n    name: \"REFERRAL_PERCENTS\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"\", type: \"address\" }],\n    name: \"refusers\",\n    outputs: [\n      { name: \"referrer\", type: \"address\" },\n      { name: \"reffrals\", type: \"uint256\" },\n      { name: \"bonus\", type: \"uint256\" },\n      { name: \"withdrawRef\", type: \"uint256\" },\n      { name: \"start\", type: \"uint256\" },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"lockwithdrawl\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"AdminUnlockSelling\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getContractBalance\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_owner\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ name: \"balance\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"\", type: \"address\" }],\n    name: \"depositData\",\n    outputs: [\n      { name: \"amount\", type: \"uint256\" },\n      { name: \"withdrawn\", type: \"uint256\" },\n      { name: \"start\", type: \"uint256\" },\n      { name: \"basepercent\", type: \"uint256\" },\n      { name: \"lockTime\", type: \"uint256\" },\n      { name: \"lockPeriod\", type: \"uint256\" },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"totalReferals\",\n    outputs: [{ name: \"\", type: \"address[]\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalDeposits\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"withdrawRefferalReward\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserTotalDeposits\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_numberOfTokens\", type: \"uint256\" }],\n    name: \"tokenToTron\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_numberOfTokens\", type: \"uint256\" }],\n    name: \"trontotoken\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"AdmindUnlockStaking\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"basepercent2\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"owner\",\n    outputs: [{ name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"oldAddress\", type: \"address\" },\n      { name: \"newAddress\", type: \"address\" },\n    ],\n    name: \"updateUser\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_value\", type: \"uint256\" }],\n    name: \"setPrice\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [{ name: \"\", type: \"string\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_value\", type: \"uint256\" }],\n    name: \"decreaseSupply\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"price\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"lockSelling\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"AdminUnlockBuying\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"AdminlockUstake\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_newOwner\", type: \"address\" }],\n    name: \"changeOwner\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"\", type: \"address\" }],\n    name: \"users\",\n    outputs: [\n      { name: \"checkpoint\", type: \"uint256\" },\n      { name: \"totalTokenBought\", type: \"uint256\" },\n      { name: \"totalTokenSold\", type: \"uint256\" },\n      { name: \"basepercent\", type: \"uint256\" },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserAmountOfDeposits\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_to\", type: \"address\" },\n      { name: \"_amount\", type: \"uint256\" },\n    ],\n    name: \"transfer\",\n    outputs: [{ name: \"success\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"AdminUnlockUnstak\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"lockBuying\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"viewSupply\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_symbol\", type: \"string\" }],\n    name: \"setSymbol\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"target\", type: \"address\" },\n      { name: \"freeze\", type: \"bool\" },\n    ],\n    name: \"FreezeAcc\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalUsers\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      { name: \"userAddress\", type: \"address\" },\n      { name: \"index\", type: \"uint256\" },\n    ],\n    name: \"getUserDepositInfo\",\n    outputs: [\n      { name: \"\", type: \"uint256\" },\n      { name: \"\", type: \"uint256\" },\n      { name: \"\", type: \"uint256\" },\n      { name: \"\", type: \"uint256\" },\n      { name: \"\", type: \"uint256\" },\n      { name: \"\", type: \"uint256\" },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_value\", type: \"uint256\" }],\n    name: \"balToken\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_name\", type: \"string\" }],\n    name: \"setName\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"TokenBought\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"\", type: \"address\" }],\n    name: \"frozen\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_numberOfTokens\", type: \"uint256\" },\n      { name: \"_value\", type: \"uint256\" },\n    ],\n    name: \"invest\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      { name: \"_owner\", type: \"address\" },\n      { name: \"_spender\", type: \"address\" },\n    ],\n    name: \"allowance\",\n    outputs: [{ name: \"remaining\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"basepercent1\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"lockStaking\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_number\", type: \"uint256\" },\n      { name: \"_value\", type: \"uint256\" },\n    ],\n    name: \"UpdateBase\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"AdminlockSelling\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserReferralBonus\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_numberOfTokens\", type: \"uint256\" },\n      { name: \"_refferer\", type: \"address\" },\n      { name: \"_value\", type: \"uint256\" },\n    ],\n    name: \"buyTokens\",\n    outputs: [{ name: \"success\", type: \"bool\" }],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"target\", type: \"address\" },\n      { name: \"freeze\", type: \"bool\" },\n    ],\n    name: \"UnfreezeAcc\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_numberOfTokens\", type: \"uint256\" },\n      { name: \"_value\", type: \"uint256\" },\n    ],\n    name: \"sellTokens\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserTotalWithdrawn\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ name: \"_owner\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  { payable: true, stateMutability: \"payable\", type: \"fallback\" },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: false, name: \"\", type: \"uint256\" },\n      { indexed: false, name: \"\", type: \"address\" },\n    ],\n    name: \"Sell\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: false, name: \"\", type: \"uint256\" },\n      { indexed: false, name: \"\", type: \"address\" },\n    ],\n    name: \"Buy\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, name: \"user\", type: \"address\" },\n      { indexed: false, name: \"amount\", type: \"uint256\" },\n      { indexed: false, name: \"Deuration\", type: \"uint256\" },\n    ],\n    name: \"NewDeposit\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, name: \"user\", type: \"address\" },\n      { indexed: false, name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"Withdrawn\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, name: \"referrer\", type: \"address\" },\n      { indexed: true, name: \"referral\", type: \"address\" },\n      { indexed: true, name: \"level\", type: \"uint256\" },\n      { indexed: false, name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"RefBonus\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: false, name: \"target\", type: \"address\" },\n      { indexed: false, name: \"frozen\", type: \"bool\" },\n    ],\n    name: \"Freeze\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: false, name: \"target\", type: \"address\" },\n      { indexed: false, name: \"frozen\", type: \"bool\" },\n    ],\n    name: \"Unfreeze\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: false, name: \"a\", type: \"address\" },\n      { indexed: false, name: \"_value\", type: \"uint256\" },\n    ],\n    name: \"Burn\",\n    type: \"event\",\n  },\n];\nexport const contractAddress = \"TRhDU8iU2s7AsvCdezADBCAwstqUpY55iJ\";\nexport const refDefaultAddress = \"TXEW2PiFyjDiUqy8ycKiX15BBZgE31fh14\";\nexport const swapingAddress = \"TR6qLH5JdsJP3wzVv95KVL9Tgb8dVC5a5u\";\nexport const approveSwapingAddress = \"TVu2keBLZrbmx9QTXHuzQwhPF242fsheN2\";\nexport const swapingEvent = \"TR6qLH5JdsJP3wzVv95KVL9Tgb8dVC5a5u\";\nexport const swapingAbi = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"contractInfo\",\n    outputs: [\n      { name: \"chargeV1\", type: \"uint256\" },\n      { name: \"chargeV2\", type: \"uint256\" },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"ChargeV2\",\n    outputs: [{ name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_amount\", type: \"uint256\" }],\n    name: \"swapping\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"PriceOfChargeV1\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"UserInfo\",\n    outputs: [\n      { name: \"chargeV1\", type: \"uint256\" },\n      { name: \"chargeV2\", type: \"uint256\" },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_price\", type: \"uint256\" }],\n    name: \"SetPriceChargeV2\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"PriceOfChargeV2\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_amount\", type: \"uint256\" }],\n    name: \"ChargeV1ToChargeV2\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"ChargeV1\",\n    outputs: [{ name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_price\", type: \"uint256\" }],\n    name: \"SetPriceChargeV1\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { name: \"_chargev1\", type: \"address\" },\n      { name: \"_chargev2\", type: \"address\" },\n      { name: \"_add\", type: \"address\" },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n];\n\n//user address ,swaping address\n//allwnce\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Grid,\n  makeStyles,\n  Button,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Done } from \"@material-ui/icons\";\nimport { logDOM } from \"@testing-library/react\";\nimport { useSelector } from \"react-redux\";\nimport { environment } from \"../../environment\";\nimport { contractAddress } from \"../../utils/constants\";\nconst useStyles = makeStyles((theme) => ({\n  Hcontainer: {\n    display: \"flex\",\n  },\n  box: {\n    paddingTop: 10,\n    paddingBlockStart: 10,\n    // paddingLeft: 20,\n    // paddingRight: 20\n  },\n  btn: {\n    backgroundColor: \"#1282C2\",\n    borderRadius: 20,\n    fontSize: 10,\n    float: \"right\",\n    color: \"white\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#1282C2\",\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      float: \"left\",\n      marginTop: 15,\n    },\n  },\n  btnRef: {\n    // float: \"right\",\n    // marginRight: 10,\n    color: \"#ffff\",\n\n    // background: \"linear-gradient(90deg, rgba(80,55,62,2) 26%, rgba(54,73,108,1) 53%, rgba(50,35,47,1) 84%)\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      float: \"left\",\n      marginTop: 15,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      float: \"left\",\n      marginTop: 15,\n    },\n  },\n  contactBox: {\n    borderRadius: 0,\n    transition: \"all 0.20s ease-in-out\",\n    backgroundImage: \"linear-gradient(45deg,#08d765 0%, #08d765 100%)\",\n    // boxShadow:\n    //   \"0 3px 6px rgba(0, 0, 0, .3), inset 0 0 10px 3px rgba(0, 0, 0, .2), 0 3px 20px #f6597282, 0 3px 35px rgba(250, 95, 59, 0.48)\",\n\n    backgroundSize: \"ceover\",\n    backgroundColor: \"#08d765\",\n    // width: \"max-content\",\n    opacity: 0.8,\n    position: \"relative\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n  },\n\n  Dashboard_boxButton: {\n    // -webkit-appearance: \"none\",\n    border: \"0\",\n    outline: \"0\",\n    // position: \"relative\",\n    background:\n      \"linear-gradient(90deg, rgba(80,55,62,2) 26%, rgba(54,73,108,1) 53%, rgba(50,35,47,1) 84%)\",\n    // backgroundSize: \"100% 100%\",\n    // borderRadius:\"100px\",\n    fontSize: \"1.3rem\",\n    lineHeight: \"1.6rem\",\n    fontFamily: \"Source Code Pro\",\n    borderRadius: \"2px solid blue\",\n  },\n\n  item2: {\n    order: 3,\n    [theme.breakpoints.up(\"sm\")]: {\n      order: 2,\n    },\n  },\n  RLogo: {\n    order: 2,\n    [theme.breakpoints.up(\"sm\")]: {\n      order: 3,\n    },\n  },\n\n  item3: {\n    order: 3,\n    [theme.breakpoints.up(780)]: {\n      order: 3,\n    },\n  },\n\n  // [theme.breakpoints.down('md')]: {\n  // order:\"1\",\n\n  // },\n\n  // '@media(minWidth: 780px)' : {\n  // order:\"1\"\n  // }\n}));\n\nfunction SubHeader() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [lang, setLang] = useState(null);\n  const [price1, setV1Price] = useState(0);\n  const [price2, setV2Price] = useState(0);\n  const isActive = useMediaQuery(\"(min-width:600px)\");\n  const getReducer = useSelector((state) => state.UserReducer);\n  const { userAccountAddress } = getReducer;\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleLanguage = (event) => {\n    setLang(event.currentTarget);\n  };\n\n  const handleLangClose = (event) => {\n    setLang(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  useEffect(() => {\n    console.log(\"data\", localStorage.getItem(\"chargeV1\"));\n    if (localStorage.getItem(\"chargeV1\")) {\n      setV1Price(localStorage.getItem(\"chargeV1\"));\n    }\n    if (localStorage.getItem(\"chargeV2\")) {\n      setV2Price(localStorage.getItem(\"chargeV2\"));\n    }\n  }, [localStorage.getItem(\"chargeV1\"), localStorage.getItem(\"chargeV2\")]);\n  return (\n    <Grid container alignItems=\"center\">\n      <Grid item lg={6} xs={12} md={6} sm={12} className=\"box\">\n        <Box display=\"flex\" className={classes.box1} m={1}>\n          {window.location.pathname !== \"/swaping\" ? (\n            <Box\n              style={{ width: \"100%\", justifyContent: \"center\" }}\n              p={1}\n              display=\"flex\"\n              flexDirection=\"row\"\n              className={classes.contactBox}\n            >\n              <p className=\"white m-0\">\n                Contact Address:&nbsp;\n                <a\n                  style={{ color: \"#fff\", textDecoration: \"none\" }}\n                  target=\"_blank\"\n                  href={`https://tronscan.org/#/contract/${contractAddress}`}\n                >\n                  {contractAddress.slice(0, 8) +\n                    \"...\" +\n                    contractAddress.slice(\n                      contractAddress.length - 6,\n                      contractAddress.length\n                    )}\n                </a>\n              </p>\n            </Box>\n          ) : (\n            <Box\n              style={{\n                width: \"100%\",\n                justifyContent: \"center\",\n                color: \"white\",\n              }}\n              p={1}\n              display=\"flex\"\n              flexDirection=\"row\"\n              className={classes.contactBox}\n            >\n              <p\n                className=\"white m-0\"\n                style={{ fontSize: \"20px\", fontFamily: \"Source Code Pro\" }}\n              >\n                ChargeV1 price &nbsp;\n              </p>\n              <span\n                style={{ fontSize: \"20px\", fontFamily: \"Source Code Pro\" }}\n              >{` :  ${price1} trx`}</span>\n            </Box>\n          )}\n        </Box>\n      </Grid>\n\n      <Grid item lg={6} xs={12} md={6} sm={12} className=\"box\">\n        <Box display=\"flex\" className={classes.box1} m={1}>\n          {window.location.pathname !== \"/swaping\" ? (\n            <Box\n              style={{\n                width: \"100%\",\n                justifyContent: \"center\",\n                color: \"white\",\n              }}\n              p={1}\n              display=\"flex\"\n              flexDirection=\"row\"\n              className={classes.contactBox}\n            >\n              Your Wallet Address:{\" \"}\n              {userAccountAddress\n                ? userAccountAddress.slice(0, 8) +\n                  \"...\" +\n                  userAccountAddress.slice(\n                    userAccountAddress?.length - 6,\n                    userAccountAddress?.length\n                  )\n                : \"...\"}\n            </Box>\n          ) : (\n            <Box\n              style={{\n                width: \"100%\",\n                justifyContent: \"center\",\n                color: \"white\",\n              }}\n              p={1}\n              display=\"flex\"\n              flexDirection=\"row\"\n              className={classes.contactBox}\n            >\n              <p\n                className=\"white m-0\"\n                style={{ fontSize: \"20px\", fontFamily: \"Source Code Pro\" }}\n              >\n                ChargeV2 price &nbsp;\n              </p>\n              <span\n                style={{ fontSize: \"20px\", fontFamily: \"Source Code Pro\" }}\n              >{`  :  ${price2} trx`}</span>\n            </Box>\n          )}\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default SubHeader;\n","import { Box } from \"@material-ui/core\";\nimport React from \"react\";\nimport BottomNavigationComponent from \"../BottomNavigation\";\nimport Header from \"../header/header\";\nimport SubHeader from \"../header/sub-header\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Layout(props) {\n  const history = useHistory();\n  // console.log(\"here is===>\", history.location);\n  return (\n    <>\n      <Box pb={10}>\n        {/* <Header /> */}\n        <SubHeader />\n        {props.children}\n      </Box>\n      <BottomNavigationComponent />\n    </>\n  );\n}\n\nexport default Layout;\n","// import { environment } from \"./environment\";\nimport store from \"./redux/store\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport Web3 from \"web3\";\nimport { environment } from \"./environment\";\n\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost8545\");\nlet supplyVal = \"\";\nexport const getUserData = async (\n  metaMastAcc,\n  dcentralized,\n  stakingDcentralized\n) => {\n  // console.log(\"here is the error=====>,\",stakingDcentralized)\n  //user wallet balance\n  const userWalletBalance = 20;\n  // await web3.eth.getBalance(metaMastAcc);\n\n  //meta mask acc\n  store.dispatch({\n    type: \"USER_METAMASK_ACCOUNT\",\n    payload: metaMastAcc,\n  });\n\n  //supply\n  // await dcentralized.methods\n  // .owner()\n  // .call()\n  // .then(async (val) => {\n  //   await dcentralized.methods\n  //     .getSupply()\n  //     .call({ from: val })\n  //     .then((value) => {\n  //       let final = web3.utils.fromWei(value);\n  //       supplyVal = web3.utils.fromWei(value);\n  //       if (final >= 950000 && final <= 1000000) {\n  //         store.dispatch({\n  //           type: \"SUPPLY_VALUE\",\n  //           payload: true,\n  //         });\n  //       } else {\n  //         store.dispatch({\n  //           type: \"SUPPLY_VALUE\",\n  //           payload: false,\n  //         });\n  //       }\n  //     });\n  // });\n\n  //token to tron value0.1\n  // await dcentralized.methods\n  //   .tokenToEthereum(JSON.stringify(Number(1 + \"000000000\")))\n  //   .call()\n  //   .then((val) => {\n  //     // let finalVal = null;\n  //     // if (supplyVal >= 950000 && supplyVal <= 1000000) {\n  //     //   finalVal = JSON.stringify(Number(val + \"0\"));\n  //     // } else {\n  //     //   finalVal = val;\n  //     // }\n\n  //     store.dispatch({\n  //       type: \"ChargeV2_CURRENT_PRICE\",\n  //       payload: web3.utils.fromWei(val),\n  //     });\n\n  //     store.dispatch({\n  //       type: \"WITHOUT_ChargeV2_CURRENT_PRICE\",\n  //       payload: val,\n  //     });\n  //   });\n\n  //user eth balance\n  // store.dispatch({\n  //   type: \"USER_ETH_WALLET_BALANCE\",\n  //   payload: web3.utils.fromWei(userWalletBalance),\n  // });\n\n  //user all stakes\n  let storeAllStakes = [];\n  let counting = 0;\n\n  // await stakingDcentralized.methods\n  //   .getUserAmountOfDeposits(metaMastAcc)\n  //   .call()\n  //   .then(async (val) => {\n  //     for (let i = 0; i < val; i++) {\n  //       await stakingDcentralized.methods\n  //         .getUserDepositInfo(metaMastAcc, i)\n  //         .call()\n  //         .then(async (value) => {\n  //           // let basePercent = value[3];\n  //           // console.log(\"here is the base percent\",basePercent);\n  //           // let amount = web3.utils.fromWei(value[0]);\n  //           // counting += ((amount * basePercent) / 10000)/86400;\n  //           // console.log(\"here is the counting===>\", counting  );\n\n  //           let obj = {\n  //             amount: web3.utils.fromWei(value[0]),\n  //             reward: value[1],\n  //             startDate: value[2],\n  //             dueDate: value[4],\n  //             daysSelected: value[5],\n  //           };\n  //           // console.log(\"here is the object===>\", obj);\n  //           storeAllStakes.push(obj);\n  //         });\n  //     }\n  //   });\n\n  if (storeAllStakes.length) {\n    // console.log(\"here are the total values===>\", counting.toFixed(10));\n\n    // console.log(\"here are the all stakes===>\", storeAllStakes);\n    store.dispatch({\n      type: \"STORE_ALL_STAKES\",\n      payload: storeAllStakes,\n    });\n  }\n\n  //recent referrals\n  // let storeRecentRefs = [];\n  // await dcentralized.methods\n  //   .totalReferals(metaMastAcc)\n  //   .call()\n  //   .then(async (val) => {\n  //     for (let i = 0; i < val.length; i++) {\n  //       await dcentralized.methods\n  //         .refusers(val[i])\n  //         .call()\n  //         .then((value) => {\n  //           let obj = {\n  //             add: val[i],\n  //             date: value.start,\n  //           };\n  //           storeRecentRefs.push(obj);\n  //         });\n  //     }\n  //   });\n\n  // if (storeRecentRefs.length) {\n  //   store.dispatch({\n  //     type: \"RECENT_ALL_REFERRALS\",\n  //     payload: storeRecentRefs,\n  //   });\n  // }\n\n  //calling price\n  const price = await dcentralized.methods.price().call();\n  store.dispatch({\n    type: \"ONE_TOKEN_PRICE\",\n    payload: web3.utils.fromWei(price),\n  });\n\n  //user personal balance\n  const balance = await dcentralized.methods.balanceOf(metaMastAcc).call();\n  store.dispatch({\n    type: \"USER_PERSONAL_BALANCE\",\n    payload: balance / 1000000000,\n  });\n\n  //ref users struct\n  await dcentralized.methods\n    .refusers(metaMastAcc)\n    .call()\n    .then((val) => {\n      //total referrals count\n      store.dispatch({\n        type: \"TOTAL_REFERRALS_COUNT\",\n        payload: val.reffrals,\n      });\n\n      //earnings\n      store.dispatch({\n        type: \"EARNINGS\",\n        payload: val.bonus,\n      });\n\n      //registered date\n      store.dispatch({\n        type: \"START_DATE\",\n        payload: val.start,\n      });\n\n      //total withdraw ref\n      store.dispatch({\n        type: \"REFERRAL_TOTAL_WITHDRAWN\",\n        payload: web3.utils.fromWei(val.withdrawRef),\n      });\n    });\n\n  //user total withdrawn\n  await stakingDcentralized.methods\n    .getUserTotalWithdrawn(metaMastAcc)\n    .call()\n    .then((val) => {\n      store.dispatch({\n        type: \"USER_TOTAL_WITHDRAWN\",\n        payload: web3.utils.fromWei(val),\n      });\n    });\n\n  //at stake\n  await stakingDcentralized.methods\n    .getUserTotalDeposits(metaMastAcc)\n    .call()\n    .then((val) => {\n      store.dispatch({\n        type: \"AT_STAKE\",\n        payload: web3.utils.fromWei(val),\n      });\n    });\n};\n\nexport const TotalRewardsFunction = async (\n  metaMastAcc,\n  stakingDcentralized,\n  dcentralized\n) => {};\n\n// get available balance and withdrawn\n// export const TotalAvailableAndTotalWithdrawn = async (\n//   defaultAddress,\n//   tronweb\n// ) => {\n//   if (defaultAddress) {\n//     await tronweb\n//       .contract()\n//       .at(environment.contractAddress)\n//       .then(async (contract) => {\n//         //user total withdrawn\n//         await contract\n//           .getUserTotalWithdrawn(defaultAddress)\n//           .call()\n//           .then((val) => {\n//             store.dispatch({\n//               type: \"USER_TOTAL_WITHDRAWN\",\n//               payload: tronweb.fromSun(val),\n//             });\n//           });\n\n//         //available withdrwan\n//         await contract\n//           .getUserAvailable(defaultAddress)\n//           .call()\n//           .then((val) => {\n//             store.dispatch({\n//               type: \"AVAILABLE_WITHDRAWN\",\n//               payload: tronweb.fromSun(val),\n//             });\n//           });\n//       });\n//   }\n// };\n\n//buy token\nexport const BuyToken = async (\n  dCenter,\n  numberOfTokens,\n  userAccountAddress,\n  closeTheModal,\n  amount,\n  stakingDcentralized,\n  getVal,\n  ManageLoader\n) => {\n  let getRefAddress = localStorage.getItem(\"_ChargeV2_REF_ADD\");\n  let getDirectFromUrl;\n\n  let url = window.location.href;\n\n  if (url.includes(\"?ref=\")) {\n    let getAddress = window.location.href.split(\"?ref=\")[1];\n    let final = getAddress.slice(0, 42);\n    getDirectFromUrl = final;\n  }\n\n  // getVal,\n  await dCenter.methods\n    .buyTokens(\n      (numberOfTokens * 1000000000).toString(),\n      getDirectFromUrl\n        ? getDirectFromUrl\n        : getRefAddress\n        ? getRefAddress\n        : environment.defaultRefAddress\n    )\n    .send({\n      from: userAccountAddress,\n      value: amount,\n      gas: 5000000,\n      gasPrice: web3.utils.toWei(\"2\", \"gwei\"),\n    })\n    .then(() => {\n      toast.success(\"bought successfully!\");\n      if (closeTheModal) {\n        closeTheModal(true);\n      }\n      if (ManageLoader) {\n        ManageLoader(false);\n      }\n      getUserData(userAccountAddress, dCenter, stakingDcentralized);\n    })\n    .catch((err) => {\n      ManageLoader(false);\n      // console.log(\"here is the error\", err);\n    });\n};\n\n//sell token\nexport const SellToken = async (\n  dCenter,\n  numberOfTokens,\n  userAccountAddress,\n  closeTheModal,\n  amount,\n  stakingDcentralized,\n  getVal,\n  ManageLoader\n) => {\n  await dCenter.methods\n    .sellTokens(\n      JSON.stringify(numberOfTokens * 1000000000),\n      amount\n      // getVal\n    )\n    .send({\n      from: userAccountAddress,\n      gas: 5000000,\n      gasPrice: web3.utils.toWei(\"2\", \"gwei\"),\n    })\n    .then(() => {\n      toast.success(\"sold successfully!\");\n      if (closeTheModal) {\n        closeTheModal(true);\n      }\n      if (ManageLoader) {\n        ManageLoader(false);\n      }\n      getUserData(userAccountAddress, dCenter, stakingDcentralized);\n    })\n    .catch((err) => {\n      if (ManageLoader) {\n        ManageLoader(false);\n      }\n      // console.log(\"here is the error\", err);\n    });\n};\n\n//stake tokens\nexport const StakeToken = async (\n  dCenter,\n  numberOfTokens,\n  userAccountAddress,\n  closeTheModal,\n  getDate,\n  stakingDcentralized,\n  ManageLoader\n) => {\n  // console.log(\"here is the date===>\", getDate, \"=======>\", numberOfTokens);\n  await dCenter.methods\n    .approve(environment.REACT_APP_STAKE_ADDRESS, numberOfTokens)\n    .send({\n      from: userAccountAddress,\n      gas: 5000000,\n      gasPrice: web3.utils.toWei(\"2\", \"gwei\"),\n    })\n    .then(async () => {\n      await stakingDcentralized.methods\n        .invest(numberOfTokens, getDate)\n        .send({\n          from: userAccountAddress,\n          gas: 5000000,\n          gasPrice: web3.utils.toWei(\"2\", \"gwei\"),\n        })\n        .then(() => {\n          toast.success(\"staked successfully!\");\n          if (closeTheModal) {\n            closeTheModal(true);\n          }\n          if (ManageLoader) {\n            ManageLoader(false);\n          }\n          getUserData(userAccountAddress, dCenter, stakingDcentralized);\n        })\n        .catch((err) => {\n          if (ManageLoader) {\n            ManageLoader(false);\n          }\n          // console.log(\"here is the error\", err);\n        });\n    })\n    .catch((err) => {\n      if (ManageLoader) {\n        ManageLoader(false);\n      }\n    });\n};\n\nexport const UstakeToken = async (contract, tronWeb) => {\n  await contract\n    .unstake()\n    .send()\n    .then(() => {\n      getUserData(tronWeb.defaultAddress.base58, tronWeb);\n    });\n};\n\n//withdraw stake earning\nexport const WithDrawStakeEarning = async (\n  dCenter,\n  userAccountAddress,\n  stakingDcentralized\n) => {\n  await stakingDcentralized.methods\n    .withdraw()\n    .send({\n      from: userAccountAddress,\n      gas: 5000000,\n      gasPrice: web3.utils.toWei(\"2\", \"gwei\"),\n    })\n    .then(() => {\n      getUserData(userAccountAddress, dCenter, stakingDcentralized);\n    });\n};\n\n//withdraw referral reward\nexport const WithDrawReferralReward = async (\n  dCenter,\n  userAccountAddress,\n  stakingDcentralized\n) => {\n  // console.log(\"here=====>\", userAccountAddress);\n  await dCenter.methods\n    .withdrawRefferalReward()\n    .send({\n      from: userAccountAddress,\n      gas: 5000000,\n      gasPrice: web3.utils.toWei(\"2\", \"gwei\"),\n    })\n    .then(() => {\n      getUserData(userAccountAddress, dCenter, stakingDcentralized);\n    });\n};\n","import React, { useState } from \"react\";\nimport {\n  makeStyles,\n  Modal,\n  Backdrop,\n  Fade,\n  Grid,\n  IconButton,\n  TextField,\n  FormControl,\n  Typography,\n  InputLabel,\n  Input,\n  Button,\n} from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport { SellToken } from \"../../userDataFunctions\";\nimport { useSelector } from \"react-redux\";\nimport { contractAddress } from \"../../utils/constants\";\nimport { toast } from \"react-toastify\";\n// import {useStyles} from './styles';\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: \"#222A31\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(3),\n    maxHeight: 450,\n    maxWidth: 900,\n    borderRadius: 20,\n    backgroundSize: \"cover\",\n  },\n  btn: {\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  formField: {\n    width: \"100%\",\n    color: \"#08d765\",\n    backgroundColor: \"transparent\",\n    borderColor: \"#08d765\",\n    \"&:focus\": {\n      borderColor: \"#08d765\",\n    },\n    \"& .MuiInputBase-input\": {\n      color: \"#fff\",\n    },\n    \"& .MuiFormLabel-root\": {\n      color: \"#fff !important\",\n    },\n  },\n  float: {},\n  clearBtn: {\n    backgroundColor: \"#D33949\",\n    color: \"white\",\n    borderRadius: 20,\n    marginTop: 10,\n    float: \"right\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#D33949\",\n    },\n  },\n  withDrawBtn: {\n    background: \"linear-gradient(90deg, #08d765 10%, #08d765 90%)\",\n    backgroundSize: \"200% 100%\",\n    width: 150,\n    color: \"white\",\n    borderRadius: 15,\n    marginTop: 10,\n    marginLeft: 10,\n    paddingRight: 5,\n    float: \"right\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n}));\n\nexport default function SellPopup({ handleReloadValues, handleClose, open }) {\n  const classes = useStyles();\n  const [numberOfTokens, setNumberOfTokens] = React.useState(\"\");\n  const [loader, setLoader] = React.useState(false);\n  const [sellTokens, setSellTokens] = useState(0);\n  const getReducer = useSelector((state) => state.UserReducer);\n\n  const {\n    metaMaskDecentralized,\n    userAccountAddress,\n    oneTokenPrice,\n    eatherInUsdt,\n    stakingDcentralized,\n    supplyValue,\n  } = getReducer;\n\n  const closeTheModal = (isTrue) => {\n    if (isTrue) {\n      handleClose();\n    }\n  };\n\n  const ManageLoader = (isFalse) => {\n    setLoader(isFalse);\n  };\n  async function tronToToken() {\n    let value, contract;\n    contract = await window?.tronWeb.contract().at(contractAddress);\n    return new Promise(async (resolve, reject) => {\n      value = await contract.trontotoken(1000000).call();\n      resolve(value);\n    });\n  }\n  async function tronToTokens(v) {\n    let value, contract;\n    contract = await window?.tronWeb.contract().at(contractAddress);\n    return new Promise(async (resolve, reject) => {\n      value = await contract.trontotoken(v).call();\n      resolve(value);\n    });\n  }\n  const BuyTokenFunction = async () => {\n    console.log(\"numberOfTokens\", numberOfTokens);\n    if (numberOfTokens === \"\") {\n    } else {\n      setLoader(true);\n      if (metaMaskDecentralized && userAccountAddress && stakingDcentralized) {\n        try {\n          let value = numberOfTokens;\n          let tronValue = await tronToToken();\n          let contract = await window?.tronWeb.contract().at(contractAddress);\n\n          contract\n            .sellTokens(value * 1000000, value * tronValue)\n            .send({\n              feeLimit: 100000000,\n              shouldPollResponse: true,\n            })\n            .then((output) => {\n              localStorage.setItem(\"reload\", true);\n              setLoader(false);\n              handleReloadValues();\n              toast.success(\"Your transaction has been confirmed\");\n              console.log(\"- Output:\", output, \"\\n\");\n              handleClose();\n            })\n            .catch((e) => {\n              toast.error(e.message);\n              setLoader(false);\n              handleReloadValues();\n            });\n        } catch (error) {\n          localStorage.setItem(\"reload\", true);\n          handleReloadValues();\n          // User denied account access...\n          console.log(\"sss\", error);\n          toast.error(error);\n          setLoader(false);\n        }\n      }\n    }\n  };\n  const handleChangeValue = async (v) => {\n    setNumberOfTokens(v);\n\n    let a = await tronToTokens(v);\n    setSellTokens(a);\n  };\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <div className={classes.header}>\n              <div>\n                <h5 className=\"white\"> Sell ChargeV2 Tokens</h5>\n                {/* <small className=\"white\">Fields with <span className=\"red\">*</span> are mendatory</small> */}\n              </div>\n              <IconButton className={classes.btn} onClick={handleClose}>\n                <Close className=\"white\" />\n              </IconButton>\n            </div>\n            <Grid container spacing={3}>\n              <Grid item xs={12} className={classes.marginTop}>\n                <TextField\n                  className={classes.formField}\n                  value={numberOfTokens}\n                  onChange={(e) => handleChangeValue(e.target.value)}\n                  id=\"outlined-basic\"\n                  label=\"Enter number of tokens\"\n                  variant=\"outlined\"\n                  type=\"number\"\n                />\n              </Grid>\n\n              <Grid item xs={12} className={classes.marginTop}>\n                <Typography\n                  style={{ color: \"#fff\" }}\n                >{`You get ${sellTokens} trx!`}</Typography>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={clsx(classes.marginTop, classes.float)}\n              >\n                {loader ? (\n                  <Button className={classes.withDrawBtn} paddingRight=\"20px\">\n                    Loading...\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={BuyTokenFunction}\n                    className={classes.withDrawBtn}\n                    paddingRight=\"20px\"\n                  >\n                    Sell Tokens\n                  </Button>\n                )}\n              </Grid>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: \"#222A31\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(3),\n    maxHeight: 450,\n    maxWidth: 900,\n    borderRadius: 20,\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.03)\",\n    // background: `linear-gradient(90deg, rgba(57,55,62,1) 26%, rgba(54,73,108,1) 53%, rgba(28,35,47,1) 84%)`,\n    backgroundSize: \"cover\",\n  },\n  btn: {\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  formField: {\n    width: \"100%\",\n    color: \"#08d765\",\n    backgroundColor: \"transparent\",\n    borderColor: \"#08d765\",\n    \"&:focus\": {\n      borderColor: \"#08d765\",\n    },\n    \"& .MuiInputBase-input\": {\n      color: \"#fff\",\n    },\n    \"& .MuiFormLabel-root\": {\n      color: \"#fff !important\",\n    },\n  },\n  float: {},\n  clearBtn: {\n    backgroundColor: \"#D33949\",\n    color: \"white\",\n    borderRadius: 20,\n    marginTop: 10,\n    float: \"right\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#D33949\",\n    },\n  },\n  withDrawBtn: {\n    background: \"linear-gradient(90deg, #08d765 10%, #08d765 90%)\",\n    backgroundSize: \"200% 100%\",\n    width: 150,\n    color: \"white\",\n    borderRadius: 15,\n    marginTop: 10,\n    marginLeft: 10,\n    float: \"right\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Modal,\n  Backdrop,\n  Fade,\n  Grid,\n  IconButton,\n  TextField,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport { useStyles } from \"./styles\";\nimport { BuyToken } from \"../../userDataFunctions\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n// import Web3 from \"web3\";\nimport { contractAddress, refDefaultAddress } from \"../../utils/constants\";\n\nexport default function BuyPopup({ handleReloadValues, handleClose, open }) {\n  const classes = useStyles();\n  const [numberOfTokens, setNumberOfTokens] = React.useState(\"\");\n  const [loader, setLoader] = React.useState(false);\n  const [buyTokens, setButTokens] = React.useState(\"\");\n\n  const getReducer = useSelector((state) => state.UserReducer);\n  const {\n    metaMaskDecentralized,\n    userAccountAddress,\n    oneTokenPrice,\n    eatherInUsdt,\n    stakingDcentralized,\n    waveCurrentPrice,\n    withoutwaveCurrentPrice,\n    supplyValue,\n  } = getReducer;\n\n  // console.log(\"here are the d center===>\", metaMaskDecentralized);\n\n  const closeTheModal = (isTrue) => {\n    if (isTrue) {\n      handleClose();\n    }\n  };\n\n  const ManageLoader = (isFalse) => {\n    setLoader(isFalse);\n  };\n  // const web3 = new Web3(Web3.givenProvider || \"http://localhost8545\");\n\n  async function tokenTOTrons(v) {\n    let value, contract;\n    contract = await window?.tronWeb.contract().at(contractAddress);\n    return new Promise(async (resolve, reject) => {\n      try {\n        value = await contract.tokenToTron(v).call();\n      } catch {}\n      resolve(value);\n    });\n  }\n  async function tokenTOTron() {\n    let value, contract;\n    contract = await window?.tronWeb.contract().at(contractAddress);\n    return new Promise(async (resolve, reject) => {\n      value = await contract.tokenToTron(1000000).call();\n      resolve(value);\n    });\n  }\n\n  const BuyTokenFunction = async () => {\n    if (numberOfTokens === \"\") {\n    } else if (numberOfTokens > 300000) {\n      toast.warning(\n        \"limit exceeded 300000 per transaction just for ETH handling!\"\n      );\n    } else {\n      console.log(metaMaskDecentralized, \"asdsadsadsad\");\n      let add = document.getElementById(\"refer\").value;\n\n      setLoader(true);\n      if (metaMaskDecentralized && userAccountAddress && stakingDcentralized) {\n        try {\n          console.log(\"value==>\" + numberOfTokens);\n          let url = new URL(document.getElementById(\"refer\").value);\n\n          let referalAddress = localStorage.getItem(\"ref\")\n            ? localStorage.getItem(\"ref\")\n            : refDefaultAddress;\n          let tronValue = await tokenTOTron();\n\n          let contract = await window?.tronWeb?.contract().at(contractAddress);\n\n          contract\n            .buyTokens(\n              numberOfTokens * 1000000,\n              referalAddress,\n              numberOfTokens * tronValue\n            )\n            .send({\n              feeLimit: 100000000,\n              callValue: numberOfTokens * tronValue,\n              shouldPollResponse: true,\n            })\n            .then((output) => {\n              console.log(\"- Output: buy tokens\", output, \"\\n\");\n              toast.success(\"Your transaction has been confirmed\");\n              setLoader(false);\n              handleReloadValues();\n              localStorage.setItem(\"reload\", true);\n              handleClose();\n            })\n            .catch((e) => {\n              toast.error(e.message);\n\n              setLoader(false);\n              handleReloadValues();\n            });\n        } catch (error) {\n          // User denied account access...\n          console.log(\"sss\", error);\n          handleReloadValues();\n          toast.error(error);\n          localStorage.setItem(\"reload\", true);\n          setLoader(false);\n        }\n\n        // let addZero = supplyValue ? Number(getVal + \"0\") : getVal;\n\n        // BuyToken(\n        //   metaMaskDecentralized,\n        //   numberOfTokens,\n        //   userAccountAddress,\n        //   closeTheModal,\n        //   convert,\n        //   stakingDcentralized,\n        //   getVal,\n        //   ManageLoader\n        // );\n      }\n    }\n  };\n  const handleChangeValue = async (v) => {\n    setNumberOfTokens(v);\n    let t = await tokenTOTrons(v);\n    setButTokens(t);\n  };\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <div className={classes.header}>\n              <div>\n                <h5 className=\"white\">Buy ChargeV2 Token</h5>\n                <small className=\"white\" style={{ color: \"#48C6C8\" }}>\n                  {/* 1 wave = ({price}) */}\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  {/* Your TRX balance = ({walletBalance + \" TRX\"}) */}\n                </small>\n              </div>\n              <IconButton className={classes.btn} onClick={handleClose}>\n                <Close className=\"white\" />\n              </IconButton>\n            </div>\n            <Grid container spacing={3}>\n              <Grid item xs={12} className={classes.marginTop}>\n                <TextField\n                  className={classes.formField}\n                  id=\"outlined-basic\"\n                  label=\"Enter number of tokens\"\n                  variant=\"outlined\"\n                  style={{ color: \"#fff\" }}\n                  value={numberOfTokens}\n                  type=\"number\"\n                  onChange={(e) => handleChangeValue(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.marginTop}>\n                <Typography\n                  style={{ color: \"#fff\" }}\n                >{`You pay ${buyTokens} trx`}</Typography>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={clsx(classes.marginTop, classes.float)}\n              >\n                {loader ? (\n                  <Button className={classes.withDrawBtn}>Loading...</Button>\n                ) : (\n                  <Button\n                    className={classes.withDrawBtn}\n                    onClick={BuyTokenFunction}\n                  >\n                    Submit Request\n                  </Button>\n                )}\n              </Grid>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Box,\n  Button,\n  Typography,\n  createMuiTheme,\n  Input,\n} from \"@material-ui/core\";\nimport {\n  AiOutlineTwitter,\n  AiFillFacebook,\n  AiFillYoutube,\n  AiFillCopy,\n} from \"react-icons/ai\";\nimport { FaTelegramPlane } from \"react-icons/fa\";\nimport { AiOutlineQuestionCircle } from \"react-icons/ai\";\nimport { BiBasket } from \"react-icons/bi\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\nimport SellModal from \"../SellModal/sellModal\";\n// import '../../App.css'\nimport \"./Dashboard.css\";\nimport BuyModal from \"../buyModal/index\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { contractAddress, refDefaultAddress } from \"../../utils/constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 10,\n    // marginLeft: 30\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  box: {\n    borderRadius: 50,\n    width: 50,\n    style: { width: \"5rem\", height: \"5rem\" },\n  },\n\n  IconSvg: {\n    // padding: theme.spacing(3, 2),\n    height: 200,\n    verticalAlign: \"middle\",\n  },\n\n  box_Ions: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    color: \"white\",\n    alignItems: \"center\",\n  },\n\n  boxColor: {\n    backgroundColor: \"#08d765\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    color: \"white\",\n\n    alignItems: \"center\",\n  },\n\n  Dtt_box: {\n    borderRadius: \"100%\",\n  },\n\n  Dtt_box: {\n    borderRadius: \"100%\",\n  },\n\n  Dashboard_boxButton: {\n    transition: \"all 0.20s ease-in-out\",\n    backgroundColor: \"#08d765\",\n    // backgroundImage: \"linear-gradient(45deg, #93c34a 0%, #52af4c 100%)\",\n    // boxShadow: \"0 3px 6px rgba(0, 0, 0, .3), inset 0 0 10px 3px rgba(0, 0, 0, .2), 0 3px 20px #88c04aad, 0 3px 35px rgba(103, 174, 74, 0.28)\",\n    border: \"0\",\n    outline: \"0\",\n    position: \"relative\",\n    backgroundSize: \"100% 100%\",\n    borderRadius: \"100px\",\n    fontSize: \"1.3rem\",\n    lineHeight: \"1.6rem\",\n    // fontFamily: \"Source Code Pro\",\n    fontWeight: 400,\n    borderRadius: \"2px solid blue\",\n  },\n\n  box1: {\n    backgroundColor: \"#222a31\",\n    borderRadius: \"0\",\n    /* opacity: 0.9; */\n    /* background-position: cover; */\n    backgroundSize: \"cover\",\n    backgroundPosition: \"bottom\",\n  },\n}));\n\nfunction Dashboard() {\n  const getReducer = useSelector((state) => state.UserReducer);\n\n  const {\n    allRecentReferrals,\n    userPersonalBalance,\n    oneTokenPrice,\n    totalReferralsCount,\n    earnings,\n    totalWithdrawn,\n    availableWithdrawn,\n    atStake,\n    registeredDate,\n    userWalletEthBalance,\n    userAccountAddress,\n    totalReward,\n    waveCurrentPrice,\n    metaMaskDecentralized,\n    eatherInUsdt,\n    stakingDcentralized,\n  } = getReducer;\n\n  const [open, setOpen] = React.useState(false);\n  const [openbuy, setOpenbuy] = React.useState(false);\n  const [ChargeV2Balance, setChargeV2Balance] = useState(0);\n  const [bonus, setBonus] = useState(0);\n  const [reffrals, setReffrals] = useState(0);\n  const [start, setStart] = useState(0);\n  const [withdrawRef, setWithdrawRef] = useState(0);\n  const [contractBalnce, setContractBalnce] = useState(0);\n  const [walletBalance, setWalletBalance] = useState(0);\n\n  const [userAmountOfDeposits, setUserAmountOfDeposits] = useState(0);\n  const [userDividends, setUserDividends] = useState(0);\n  const [usdRate, setUsdRate] = useState(0);\n  const [price, setPrice] = useState(0);\n  const history = useHistory();\n  useEffect(async () => {\n    await axios\n      .get(\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,TRX,IOT&tsyms=USD\"\n      )\n      .then((res) => {\n        const cryptos = res.data;\n        console.log(cryptos[\"TRX\"].USD);\n        setUsdRate(cryptos[\"TRX\"].USD);\n      });\n  }, []);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleBuyOpen = () => {\n    setOpenbuy(true);\n  };\n\n  const handleCloseBuy = () => {\n    setOpenbuy(false);\n  };\n  const classes = useStyles();\n\n  const copyReferralLink = () => {\n    let get = document.getElementById(\"refer\").select();\n    document.execCommand(\"copy\");\n    toast.success(\"Copied!\");\n  };\n  const BuyTokenFunction = async () => {\n    if (metaMaskDecentralized && userAccountAddress && stakingDcentralized) {\n      try {\n        let contract = await window?.tronWeb?.contract().at(contractAddress);\n\n        let res = await contract.balanceOf(userAccountAddress).call();\n        let resTotalRef = await contract\n          .totalReferals(userAccountAddress)\n          .call();\n        let refusers = await contract.refusers(userAccountAddress).call();\n        let UAmountOfDeposits = await contract\n          .getUserTotalDeposits(userAccountAddress)\n          .call();\n        let uDividends = await contract\n          .getUserDividends(userAccountAddress)\n          .call();\n        let tradeobj = await window?.tronWeb.trx.getAccount(userAccountAddress);\n        let priceObj = await contract.price().call();\n        let contractBlnce = await contract.getContractBalance().call();\n        setContractBalnce(contractBlnce / 1000000);\n        setPrice(priceObj?._hex / 1000000);\n\n        // balance\n        setWalletBalance(tradeobj?.balance);\n        setUserAmountOfDeposits(UAmountOfDeposits?._hex / 1000000);\n        setUserDividends(uDividends?._hex / 1000000);\n        setBonus(refusers?.bonus?._hex / 1000000);\n        setReffrals(refusers?.reffrals?._hex / 1000000);\n        setStart(refusers?.start?._hex);\n        setWithdrawRef(refusers?.withdrawRef?._hex / 1000000);\n\n        setChargeV2Balance(res?.balance?._hex / 1000000);\n      } catch (error) {\n        // User denied account access...\n        console.log(\"sss\", error);\n        toast.error(error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (localStorage.getItem(\"reload\")) {\n      setTimeout(() => {\n        BuyTokenFunction();\n        localStorage.setItem(\"reload\", false);\n      }, 3000);\n    }\n  }, [localStorage.getItem(\"reload\")]);\n  const handleReloadValues = () => {\n    BuyTokenFunction();\n  };\n  React.useEffect(() => {\n    BuyTokenFunction();\n  }, [\n    metaMaskDecentralized,\n    userAccountAddress,\n    stakingDcentralized,\n    open,\n    openbuy,\n  ]);\n\n  return (\n    <div className={classes.root}>\n      <Grid container alignItems=\"center\">\n        <Grid item lg={4} xs>\n          <Box display=\"flex\" className={classes.box1} m={1}>\n            <Box\n              width=\"200px\"\n              borderRadius=\"20px 0px 0px 20px\"\n              style={{}}\n              p={1}\n            >\n              <Box\n                m=\"10px\"\n                borderRadius=\"10px\"\n                height=\"70px\"\n                className={classes.boxColor}\n              >\n                <AccountBalanceWalletIcon />\n              </Box>\n            </Box>\n\n            <Box\n              borderRadius=\"0px 20px 20px 0px\"\n              width=\"100%\"\n              height=\"auto\"\n              style={{ color: \"#ffff\" }}\n              pt={3}\n              alignItems=\"center\"\n            >\n              <Typography color=\"colorText.main !important\">\n                ChargeV2 Balance\n              </Typography>\n              <Typography variant=\"h6\" color=\"colorText.main !important\">\n                {\" \"}\n                {ChargeV2Balance ? ChargeV2Balance : 0} ChargeV2 ($\n                {price && ChargeV2Balance\n                  ? parseFloat(ChargeV2Balance * (price * usdRate)).toFixed(5)\n                  : 0}\n                )\n              </Typography>\n              <Typography color=\"colorText.main !important\">\n                {\" \"}\n                {/* price call then divid by 1000000 */}\n                {/* trx to dollar */}\n                ChargeV2 Price: ${\" \"}\n                {price ? parseFloat(price * usdRate).toFixed(5) : 0}\n              </Typography>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item lg={4} xs>\n          <Box display=\"flex\" className={classes.box1} m={1}>\n            <Box\n              width=\"200px\"\n              borderRadius=\"20px 0px 0px 20px\"\n              style={{}}\n              p={1}\n            >\n              <Box\n                m=\"10px\"\n                borderRadius=\"10px\"\n                height=\"70px\"\n                className={classes.boxColor}\n              >\n                <AccountBalanceWalletIcon />\n              </Box>\n            </Box>\n\n            <Box\n              borderRadius=\"0px 20px 20px 0px\"\n              width=\"100%\"\n              height=\"auto\"\n              style={{ color: \"#ffff\" }}\n              pt={3}\n              alignItems=\"center\"\n            >\n              <Typography color=\"colorText.main !important\">\n                Total Referrals Count\n              </Typography>\n              <Typography variant=\"h6\" color=\"colorText.main !important\">\n                {reffrals ? reffrals : 0}\n                {/* refusers  reffrals */}\n              </Typography>\n              <Typography color=\"colorText.main !important\">\n                {\" \"}\n                {/*refusers bonus  */}\n                Earnings: {bonus ? bonus : 0}\n                &nbsp;($\n                {price && bonus\n                  ? parseFloat(bonus * (price * usdRate)).toFixed(5)\n                  : 0}\n                )\n              </Typography>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item lg={4} xs>\n          <Box display=\"flex\" className={classes.box1} m={1}>\n            <Box\n              width=\"200px\"\n              borderRadius=\"20px 0px 0px 20px\"\n              style={{}}\n              p={1}\n            >\n              <Box\n                m=\"10px\"\n                borderRadius=\"10px\"\n                height=\"70px\"\n                className={classes.boxColor}\n              >\n                <AccountBalanceWalletIcon />\n              </Box>\n            </Box>\n\n            <Box\n              borderRadius=\"0px 20px 20px 0px\"\n              width=\"100%\"\n              height=\"auto\"\n              style={{ color: \"#ffff\" }}\n              pt={3}\n              alignItems=\"center\"\n            >\n              <Typography color=\"colorText.main !important\">\n                Total Earning\n              </Typography>\n              <Typography variant=\"h6\" color=\"colorText.main !important\">\n                {/* .getUserDividends */}\n                {userDividends ? parseFloat(userDividends).toFixed(3) : 0}{\" \"}\n                ChargeV2 &nbsp;($\n                {price && userDividends\n                  ? parseFloat(userDividends * (price * usdRate)).toFixed(5)\n                  : 0}\n                )\n              </Typography>\n              <Typography color=\"colorText.main !important\">\n                {\" \"}\n                {/* 30.getUserAmountOfDeposits */}\n                At Stake: {userAmountOfDeposits} ChargeV2\n              </Typography>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid lg={12} xs style={{ textAlign: \"center\" }}>\n        <Box m=\"10px\" color=\"#08d765\">\n          <Typography variant=\"h4\" component=\"h4\">\n            Contract Balance\n          </Typography>\n          <Typography style={{ color: \"#fff\" }}>\n            {contractBalnce} trx\n          </Typography>\n        </Box>\n      </Grid>\n      <Grid container style={{ backgroundColor: \"#222a31\" }}>\n        <Grid item xs>\n          <Box\n            className={classes.box1}\n            borderRadius=\"20px 20px 20px 20px\"\n            style={{}}\n            m={1}\n          >\n            {/* <Box display=\"flex\">\n              <Box\n                borderRadius=\"20px 0px 0px 0px\"\n                width=\"100px\"\n                style={{}}\n                p={1}\n              >\n                <Box\n                  m=\"10px\"\n                  borderRadius=\"10px\"\n                  height=\"70px\"\n                  className={classes.box_Ions}\n                  style={{ backgroundColor: \"#08d765\" }}\n                >\n                  <BiBasket fontSize=\"large\" />\n                </Box>\n              </Box>\n\n              <Box\n                width=\"300px\"\n                height=\"auto\"\n                style={{ color: \"#ffff\" }}\n                pt={3}\n                alignItems=\"center\"\n              >\n                <Typography> Buy with TRX</Typography>\n                <Typography variant=\"4\">ChargeV2 Tokens</Typography>\n                <Typography>Earn upto 3% daily staking reward</Typography>\n              </Box>\n            </Box>\n            */}\n            <Box m=\"30px\" p={5}>\n              <Button\n                className={classes.Dashboard_boxButton}\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={handleBuyOpen}\n                style={{\n                  // backgroundColor: \"#458FDD\",\n                  color: \"#ffff\",\n                  padding: \"5px 0px 5px 0px\",\n                }}\n                fullWidth\n              >\n                Buy\n              </Button>\n            </Box>\n            {/* <Box textAlign=\"center\" p={1} ><Typography variant=\"h6\" style={{ color: \"#B01F2C\" }} > Staking Paused !</Typography></Box> */}\n          </Box>\n        </Grid>\n        <Grid item xs>\n          <Box\n            className={classes.box1}\n            borderRadius=\"20px 20px 20px 20px\"\n            style={{}}\n            m={1}\n          >\n            {/* <Box display=\"flex\">\n              <Box\n                borderRadius=\"20px 0px 0px 0px\"\n                width=\"100px\"\n                style={{}}\n                p={1}\n              >\n                <Box\n                  m=\"10px\"\n                  borderRadius=\"10px\"\n                  height=\"70px\"\n                  className={classes.box_Ions}\n                  style={{ backgroundColor: \"#08d765\" }}\n                >\n                  <BiBasket fontSize=\"large\" />\n                </Box>\n              </Box>\n\n              <Box\n                width=\"300px\"\n                height=\"auto\"\n                style={{ color: \"#ffff\" }}\n                pt={3}\n                alignItems=\"center\"\n              >\n                <Typography> Withdraw to TRX</Typography>\n                <Typography variant=\"5\">ChargeV2 Tokens</Typography>\n                <Typography>Earn upto 3% daily staking reward</Typography>\n              </Box>\n            </Box>\n            */}\n            <Box m=\"30px\" p={5}>\n              <Button\n                p={1}\n                className={classes.Dashboard_boxButton}\n                onClick={handleOpen}\n                color=\"primary\"\n                variant=\"outlined\"\n                style={{\n                  // backgroundColor: \"#112C6B\",\n                  color: \"#ffff\",\n                  padding: \"5px 0px 5px 0px\",\n                }}\n                fullWidth\n              >\n                SELL\n              </Button>\n            </Box>\n            {/* <Box textAlign=\"center\" p={1} ><Typography variant=\"h6\" style={{ color: \"#B01F2C\" }} > Staking Paused !</Typography></Box> */}\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid container style={{ backgroundColor: \"#222a31\", marginTop: 8 }}>\n        <Grid item xs maxWidth=\"md\">\n          <Box\n            className={classes.box1}\n            borderRadius=\"20px 20px 20px 20px\"\n            style={{}}\n            m={1}\n          >\n            <Box>\n              <Box\n                className=\"Account_success\"\n                display=\"flex\"\n                p={2}\n                style={{ color: \"#ffff\" }}\n              >\n                <Typography variant=\"h6\"> Account Overview</Typography>\n                <div className=\"succse_badges\">success</div>\n              </Box>\n              <div className=\"success-space-line\"></div>\n\n              <Box m={4} style={{ color: \"#ffff\" }}>\n                <p>Registered</p>\n                <p>\n                  {/* refusers start */}\n                  {start ? moment.unix(start).format(\"DD MMM YYYY\") : 0}\n                  {/* {start\n                    ? moment.unix(start).format(\"DD MMM YYYY\")\n                    : 0} */}\n                </p>\n                <div className=\"success-page-space-line\"></div>\n              </Box>\n\n              <Box m={4} style={{ color: \"#ffff\" }}>\n                <p>Your TRX Balance</p>\n                <p>\n                  {walletBalance ? parseFloat(walletBalance / 1000000) : 0} TRX\n                </p>\n                <div className=\"success-page-space-line\"></div>\n              </Box>\n\n              <Box m={4} style={{ color: \"#ffff\" }} paddingBottom={5}>\n                <p>Refferal URL</p>\n                {/* AiOutlineTwitter,AiFillFacebook,AiFillYoutube */}\n\n                <div>\n                  {/* <span>\n                    <FacebookIcon fontSize=\"large\" />\n                  </span>{\" \"}\n                  <WhatsAppIcon fontSize=\"large\" />\n                  <span>\n                    <TelegramIcon fontSize=\"large\" />\n                  </span> */}\n                  {/* <span onClick={copyReferralLink}>\n                    <AddIcon fontSize=\"large\" />\n                  </span> */}\n                </div>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                  <Typography pt=\"2\">\n                    <Input\n                      style={{ color: \"white\" }}\n                      type=\"text\"\n                      id=\"refer\"\n                      value={`${window.location.protocol}//${window.location.host}/login?ref=${userAccountAddress}`}\n                      readonly\n                    />\n                  </Typography>\n                  <AiFillCopy\n                    style={{ fontSize: 20, cursor: \"pointer\" }}\n                    onClick={copyReferralLink}\n                  />\n                </div>\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs>\n          <Box\n            className={classes.box1}\n            borderRadius=\"20px 20px 20px 20px\"\n            style={{}}\n            m={1}\n          >\n            {/* <Box display=\"flex\">\n              <Box\n                borderRadius=\"20px 0px 0px 0px\"\n                width=\"100px\"\n                style={{}}\n                p={1}\n              >\n                <Box\n                  m=\"10px\"\n                  borderRadius=\"10px\"\n                  height=\"70px\"\n                  className={classes.box_Ions}\n                  style={{ backgroundColor: \"#08d765\" }}\n                >\n                  <BiBasket fontSize=\"large\" />\n                </Box>\n              </Box>\n\n              <Box\n                width=\"300px\"\n                height=\"auto\"\n                style={{ color: \"#ffff\" }}\n                pt={2}\n                alignItems=\"center\"\n              >\n                <span>stake</span>\n                <Typography variant=\"h6\"> ChargeV2 Tokens</Typography>\n                <span>Earn upto 3% daily staking reward</span>\n              </Box>\n            </Box>\n             */}\n            <Box m=\"30px\">\n              {/* <Button\n                onClick={() => history.push(\"/stakes\")}\n                className={classes.Dashboard_boxButton}\n                variant=\"outlined\"\n                style={{\n                  // backgroundColor: \"#112C6B\",\n                  color: \"#ffff\",\n                  padding: \"5px 0px 5px 0px\",\n                }}\n                fullWidth\n              >\n                stake your ChargeV2\n              </Button> */}\n            </Box>\n            <Box textAlign=\"center\" p={1}>\n              <Typography variant=\"h6\" style={{ color: \"#B01F2C\" }}>\n                {\" \"}\n                {/* Staking Paused ! */}\n              </Typography>\n            </Box>\n          </Box>\n\n          <Box\n            className={classes.box1}\n            borderRadius=\"20px 20px 20px 20px\"\n            style={{}}\n            m={1}\n          >\n            <Box\n              className={classes.box1}\n              borderRadius=\"20px 20px 20px 20px\"\n              style={{}}\n              m={1}\n            >\n              {/* <Box>\n                <Box\n                  className=\"Account_success\"\n                  display=\"flex\"\n                  p={2}\n                  style={{ color: \"#ffff\" }}\n                >\n                  <Typography variant=\"h6\"> Recent Referrals</Typography>\n                  <div className=\"link_success_badges\">\n                    <a className=\" success_Links \"></a>\n                  </div>\n                </Box>\n                <div className=\"success-space-line\"></div>\n                {allRecentReferrals && allRecentReferrals.length ? (\n                  // <Box m={4}>\n                  <div className=\"question_mark\" style={{ paddingBottom: 1 }}>\n                    <Link to=\"/dashboard/referrals\" style={{ color: \"white\" }}>\n                      View Referrals\n                    </Link>\n                  </div>\n                ) : (\n                  // </Box>\n                  <Box m={4}>\n                    <div className=\"question_mark\">\n                      <p>\n                        <AiOutlineQuestionCircle />\n                      </p>\n                      <p> No Record Found</p>\n                    </div>\n                  </Box>\n                )}\n              </Box> */}\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n      <BuyModal\n        handleReloadValues={handleReloadValues}\n        open={openbuy}\n        handleClose={handleCloseBuy}\n      />\n      <SellModal\n        handleReloadValues={handleReloadValues}\n        open={open}\n        handleClose={handleClose}\n      />\n    </div>\n  );\n}\nexport default Dashboard;\n","import TronWeb from \"tronweb\";\n\nconst TronHelper = {\n  tronWeb: null,\n  isInstalled: !!window.tronWeb,\n\n  async initTron() {\n    const HttpProvider = TronWeb.providers.HttpProvider;\n    const fullNode = new HttpProvider(\"https://api.trongrid.io\");\n    const solidityNode = new HttpProvider(\"https://api.trongrid.io\");\n    const eventServer = \"https://api.trongrid.io/\";\n    const gettronWeb = new TronWeb(fullNode, solidityNode, eventServer);\n    this.tronWeb = gettronWeb;\n\n    const tronLoader = setInterval(() => {\n      if (window.tronWeb && window.tronWeb.ready) {\n        this.tronWeb = window.tronWeb;\n        clearInterval(tronLoader);\n      } else {\n        this.tronWeb = gettronWeb;\n      }\n    }, 500);\n  },\n};\n\nexport default TronHelper;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Modal,\n  Backdrop,\n  Fade,\n  Grid,\n  IconButton,\n  TextField,\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n} from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport TronHelper from \"../../utils/TronHelper\";\nimport { StakeToken } from \"../../userDataFunctions\";\n// import { environment } from \"../../environment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n// import FormControl from '@material-ui/core/FormControl';\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport { useSelector } from \"react-redux\";\nimport { contractAddress } from \"../../utils/constants\";\nimport { toast } from \"react-toastify\";\n\n// import {useStyles} from './styles';\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    color: \"#fff !important\",\n    \"& .stakeContainerCheck\": {\n      color: \"#fff !important\",\n    },\n    \"& .stakeContainerCheck .MuiSelect-select.MuiSelect-select\": {\n      color: \"#fff !important\",\n    },\n    \"& .MuiSelect-select.MuiSelect-select\": {\n      color: \"#fff !important\",\n    },\n    \"& .MuiSelect-select\": {\n      color: \"#fff !important\",\n    },\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(3),\n    maxHeight: 450,\n    maxWidth: 900,\n    borderRadius: 20,\n    backgroundSize: \"cover\",\n    backgroundColor: \"#222A31\",\n  },\n  btn: {\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  formField: {\n    width: \"100%\",\n    color: \"#1282C2\",\n    backgroundColor: \"rgba(57,55,62,1)\",\n    borderColor: \"#19C6C7\",\n    \"&:focus\": {\n      borderColor: \"#19C6C7\",\n    },\n    \"& .MuiInputBase-input\": {\n      color: \"#fff\",\n    },\n    \"& .MuiFormLabel-root\": {\n      color: \"#fff !important\",\n    },\n  },\n  float: {},\n  clearBtn: {\n    backgroundColor: \"#D33949\",\n    color: \"white\",\n    borderRadius: 20,\n    marginTop: 10,\n    float: \"right\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#D33949\",\n    },\n  },\n  withDrawBtn: {\n    background: \"linear-gradient(90deg, #08d765 10%, #08d765 90%)\",\n    backgroundSize: \"200% 100%\",\n    width: 150,\n    color: \"white\",\n    borderRadius: 15,\n    marginTop: 10,\n    marginLeft: 10,\n    paddingRight: 5,\n    float: \"right\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n}));\n\nexport default function StakPopup({ handleUpdateValues, handleClose, open }) {\n  const classes = useStyles();\n  const [numberOfTokens, setNumberOfTokens] = React.useState(\"\");\n  const [getDate, setGetDate] = React.useState(\"\");\n  const [loader, setLoader] = React.useState(false);\n\n  const getReducer = useSelector((state) => state.UserReducer);\n\n  const {\n    metaMaskDecentralized,\n    userAccountAddress,\n    oneTokenPrice,\n    eatherInUsdt,\n    stakingDcentralized,\n  } = getReducer;\n\n  // console.log(\"here is the contract---->\", metaMaskDecentralized);\n\n  const closeTheModal = (isTrue) => {\n    if (isTrue) {\n      handleClose();\n    }\n  };\n\n  const ManageLoader = (isFalse) => {\n    setLoader(isFalse);\n  };\n\n  const BuyTokenFunction = async () => {\n    if (numberOfTokens === \"\" || getDate === \"\") {\n    } else {\n      setLoader(true);\n      if (metaMaskDecentralized && stakingDcentralized && userAccountAddress) {\n        let contract = await window?.tronWeb?.contract().at(contractAddress);\n        contract\n          .invest(numberOfTokens * 1000000, getDate)\n          .send({\n            feeLimit: 100000000,\n            shouldPollResponse: true,\n          })\n          .then((output) => {\n            handleUpdateValues();\n            localStorage.setItem(\"reload\", true);\n            console.log(\"- Output:\", output, \"\\n\");\n            setLoader(false);\n            toast.success(\"Your transaction has been confirmed\");\n            handleClose();\n          })\n          .catch((e) => {\n            toast.error(e.message);\n\n            handleUpdateValues();\n            localStorage.setItem(\"reload\", true);\n            console.log(\"===============error\");\n            setLoader(false);\n          });\n        console.log(getDate, numberOfTokens);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <div className={classes.header}>\n              <div>\n                <h5 className=\"white\" style={{ color: \"green\" }}>\n                  {\" \"}\n                  Stake ChargeV2\n                </h5>\n                {/* <small className=\"white\">Fields with <span className=\"red\">*</span> are mendatory</small> */}\n              </div>\n              <IconButton className={classes.btn} onClick={handleClose}>\n                <Close className=\"white\" />\n              </IconButton>\n            </div>\n            <Grid container spacing={3}>\n              <Grid\n                item\n                xs={12}\n                className={`${classes.marginTop} stakeContainerCheck`}\n              >\n                <FormControl\n                  className={classes.formControl}\n                  style={{ width: \"100%\" }}\n                >\n                  {/* <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel> */}\n                  <Select\n                    // style={{ color: \"#fff !important\" }}\n                    className={classes.select}\n                    native\n                    value={getDate}\n                    onChange={(e) => setGetDate(e.target.value)}\n                    inputProps={{\n                      name: \"age\",\n                      id: \"age-native-simple\",\n                    }}\n                  >\n                    <option\n                      // aria-label=\"None\"\n                      value=\"\"\n                      style={{ backgroundColor: \"#14142B\", color: \"#fff\" }}\n                    >\n                      Select Days\n                    </option>\n                    <option\n                      value={7}\n                      style={{ backgroundColor: \"#14142B\", color: \"#fff\" }}\n                    >\n                      7 Days Pool - 1% daily\n                    </option>\n                    <option\n                      style={{ backgroundColor: \"#14142B\", color: \"#fff\" }}\n                      value={14}\n                    >\n                      14 Days Pool - 2% daily\n                    </option>\n                    <option\n                      style={{ backgroundColor: \"#14142B\", color: \"#fff\" }}\n                      value={30}\n                    >\n                      30 Days Pool - 3% daily\n                    </option>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} className={classes.marginTop}>\n                <TextField\n                  className={classes.formField}\n                  value={numberOfTokens}\n                  onChange={(e) => setNumberOfTokens(e.target.value)}\n                  id=\"outlined-basic\"\n                  label=\"Enter number of tokens\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={clsx(classes.marginTop, classes.float)}\n              >\n                {loader ? (\n                  <Button className={classes.withDrawBtn} paddingRight=\"20px\">\n                    Loading...\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={BuyTokenFunction}\n                    className={classes.withDrawBtn}\n                    paddingRight=\"20px\"\n                  >\n                    Stake Tokens\n                  </Button>\n                )}\n              </Grid>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  makeStyles,\n  Modal,\n  Backdrop,\n  Fade,\n  Grid,\n  IconButton,\n  TextField,\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n} from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\n// import {useStyles} from './styles';\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(3),\n    maxHeight: 450,\n    maxWidth: 900,\n    borderRadius: 20,\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.03)\",\n    background: `linear-gradient(90deg, rgba(57,55,62,1) 26%, rgba(54,73,108,1) 53%, rgba(28,35,47,1) 84%)`,\n    backgroundSize: \"cover\",\n    backgroundColor: \"#326BB1\",\n  },\n  btn: {\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  formField: {\n    width: \"100%\",\n    color: \"#1282C2\",\n    backgroundColor: \"rgba(57,55,62,1)\",\n    borderColor: \"#19C6C7\",\n    \"&:focus\": {\n      borderColor: \"#19C6C7\",\n    },\n  },\n  float: {},\n  clearBtn: {\n    backgroundColor: \"#D33949\",\n    color: \"white\",\n    borderRadius: 20,\n    marginTop: 10,\n    float: \"right\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#D33949\",\n    },\n  },\n  withDrawBtn: {\n    background: \"linear-gradient(90deg, #132660 10%, #0062cc 90%)\",\n    backgroundSize: \"200% 100%\",\n    width: 150,\n    color: \"white\",\n    borderRadius: 15,\n    marginTop: 10,\n    marginLeft: 10,\n    paddingRight: 5,\n    float: \"right\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n}));\n\nexport default function UnStakeModal({ handleClose, open }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <div className={classes.header}>\n              <div>\n                <h5 className=\"white\"> UnStake Wave</h5>\n                <small className=\"white\">\n                  Fields with <span className=\"red\">*</span> are mendatory\n                </small>\n              </div>\n              <IconButton className={classes.btn} onClick={handleClose}>\n                <Close className=\"white\" />\n              </IconButton>\n            </div>\n            <Grid container spacing={3}>\n              <Grid item lg={6} xs className={classes.marginTop}>\n                <TextField\n                  className={classes.formField}\n                  id=\"outlined-basic\"\n                  label=\"Select Currency *\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item lg={6} xs className={classes.marginTop}>\n                {/* Select Amount (wave) * (Available Balance: 0 wave) */}\n                <TextField\n                  className={classes.formField}\n                  id=\"outlined-basic\"\n                  label=\"Select Amount (wave)\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.marginTop}>\n                {/* Approx. ETH You Will Recieve * (Your balance: 0 ETH) */}\n                <TextField\n                  className={classes.formField}\n                  id=\"outlined-basic\"\n                  label=\" Your Public address*\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.marginTop}>\n                <TextField\n                  className={classes.formField}\n                  id=\"outlined-basic\"\n                  label=\"Transaction Id\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={clsx(classes.marginTop, classes.float)}\n              >\n                <Button\n                  m={15}\n                  className={classes.clearBtn}\n                  onClick={handleClose}\n                >\n                  Cancel\n                </Button>\n                <Button className={classes.withDrawBtn} paddingRight=\"20px\">\n                  WithDraw Tokens\n                </Button>\n              </Grid>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { useTimer } from \"react-timer-hook\";\r\nimport moment from \"moment\";\r\nfunction MyTimer({ expiryTimestamp }) {\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    days,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    resume,\r\n    restart,\r\n  } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => console.warn(\"onExpire called\"),\r\n  });\r\n  //   console.log(seconds, minutes, hours, days);\r\n  //   console.log(expiryTimestamp);\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <div style={{ fontSize: \"20px\", color: \"#fff\" }}>\r\n        <span>{days}</span>:<span>{hours}</span>:<span>{minutes}</span>:\r\n        <span>{seconds}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App({ timeStamp }) {\r\n  const time = new Date(timeStamp);\r\n\r\n  time.setSeconds(time.getSeconds()); // 10 minutes timer\r\n  console.log(time, timeStamp);\r\n  return (\r\n    <div>\r\n      <MyTimer expiryTimestamp={time} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box, Button, Typography, createMuiTheme } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\nimport { BiBasket } from \"react-icons/bi\";\nimport UnStakeModal from \"../unStakeModal/unStakemodal\";\nimport StakPopup from \"../stakeModal/stakeModal\";\nimport { UstakeToken } from \"../../userDataFunctions\";\n// import { environment } from \"../../environment\";\n// import TronHelper from \"../../utils/TronHelper\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport SyncAltIcon from \"@material-ui/icons/SyncAlt\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 10,\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  box: {\n    borderRadius: 50,\n    width: 50,\n    style: { width: \"5rem\", height: \"5rem\" },\n  },\n\n  IconSvg: {\n    height: 200,\n    verticalAlign: \"middle\",\n  },\n\n  box_Ions: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    color: \"white\",\n    alignItems: \"center\",\n  },\n\n  boxColor: {\n    backgroundColor: \"#08d765\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    color: \"white\",\n\n    alignItems: \"center\",\n  },\n\n  box1: {\n    // backgroundColor: \"#27273d\",\n    // backgroundImage:\n    //   \"linear-gradient(90deg, rgba(57,55,62,1) 26%, rgba(54,73,108,1) 53%, rgba(28,35,47,1) 84%)\",\n    borderRadius: \"20px\",\n    /* opacity: 0.9; */\n    /* background-position: cover; */\n    backgroundSize: \"cover\",\n    backgroundPosition: \"bottom\",\n  },\n\n  Dashboard_boxButton: {\n    // -webkit-appearance: \"none\",\n    transition: \"all 0.20s ease-in-out\",\n    backgroundImage: \"linear-gradient(45deg, #93c34a 0%, #52af4c 100%)\",\n    border: \"0\",\n    outline: \"0\",\n    position: \"relative\",\n    backgroundSize: \"100% 100%\",\n    borderRadius: \"100px\",\n    fontSize: \"1.3rem\",\n    lineHeight: \"1.6rem\",\n    fontFamily: \"Source Code Pro\",\n    borderRadius: \"2px solid blue\",\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    background:\n      \"linear-gradient(90deg, rgba(57,55,62,1) 26%, rgba(54,73,108,1) 53%\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction Stacks() {\n  const classes = useStyles();\n  // const [tronWeb, setTronWeb] = React.useState();\n  // debugger;\n  const getReducer = useSelector((state) => state.UserReducer);\n\n  const { allRecentStake } = getReducer;\n  // console.log(\"here are the stakes=====>\", allRecentStake);\n  // React.useEffect(() => {\n  //   const tronLoader = setInterval(() => {\n  //     if (window.tronWeb && window.tronWeb.ready) {\n  //       setTronWeb(window.tronWeb);\n  //       clearInterval(tronLoader);\n  //     }\n  //   }, 500);\n  // }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid container alignItems=\"center\">\n        <Grid container>\n          <Grid item xs={12}>\n            <Box style={{ color: \"white\" }} m={1} className={classes.box1}>\n              <Box\n                className=\"table_top_border\"\n                textAlign=\"left\"\n                p={3}\n                borderBottom={1}\n                borderColor=\"red\"\n              >\n                <Typography variant=\"h6\"> Paused</Typography>\n              </Box>\n\n              <Box m={1}>\n                <TableContainer>\n                  <Table\n                    className={classes.table}\n                    aria-label=\"customized table\"\n                  >\n                    <TableHead>\n                      <TableRow>\n                        <StyledTableCell>#</StyledTableCell>\n                        <StyledTableCell align=\"right\">Amount</StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                          Start Date\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                          Due Date\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">Days</StyledTableCell>\n                        <StyledTableCell align=\"center\">Status</StyledTableCell>\n                        <StyledTableCell\n                          align=\"center\"\n                          style={{\n                            color: \"#77BD4A\",\n                          }}\n                        >\n                          Reward\n                        </StyledTableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {allRecentStake.length\n                        ? allRecentStake.map((i, index) => {\n                            return (\n                              <StyledTableRow>\n                                <StyledTableCell\n                                  align=\"left\"\n                                  style={{ color: \"white\" }}\n                                >\n                                  {\" \"}\n                                  {+index + +1}{\" \"}\n                                </StyledTableCell>\n                                <StyledTableCell\n                                  align=\"right\"\n                                  style={{ color: \"white\" }}\n                                >\n                                  {i.amount}\n                                </StyledTableCell>\n                                <StyledTableCell\n                                  align=\"right\"\n                                  style={{ color: \"white\" }}\n                                >\n                                  {moment\n                                    .unix(i.startDate)\n                                    .format(\"MMM/DD/YYYY\")}\n                                </StyledTableCell>\n                                <StyledTableCell\n                                  align=\"right\"\n                                  style={{ color: \"white\" }}\n                                >\n                                  {moment\n                                    .unix(i.dueDate)\n                                    .add(i.daysSelected, \"days\")\n                                    .format(\"MMM/DD/YYYY\")}\n                                </StyledTableCell>\n                                <StyledTableCell\n                                  align=\"right\"\n                                  style={{ color: \"white\" }}\n                                >\n                                  {i.daysSelected}\n                                </StyledTableCell>\n                                <StyledTableCell\n                                  // align=\"right\"\n                                  style={{\n                                    color: \"white\",\n                                    textAlign: \"center\",\n                                  }}\n                                >\n                                  <div\n                                    style={{\n                                      display: \"flex\",\n                                      justifyContent: \"center\",\n                                    }}\n                                  >\n                                    {moment\n                                      .unix(i.dueDate)\n                                      .add(i.daysSelected, \"days\")._d ===\n                                    Date() ? (\n                                      <div\n                                        style={{\n                                          width: 8,\n                                          height: 8,\n                                          backgroundColor: \"#82BF4A\",\n                                          borderRadius: \"50%\",\n                                        }}\n                                      ></div>\n                                    ) : (\n                                      <div\n                                        style={{\n                                          width: 8,\n                                          height: 8,\n                                          backgroundColor: \"#C5485E\",\n                                          borderRadius: \"50%\",\n                                        }}\n                                      ></div>\n                                    )}\n                                  </div>\n                                </StyledTableCell>\n                                <StyledTableCell\n                                  // align=\"right\"\n                                  style={{\n                                    color: \"white\",\n                                    textAlign: \"center\",\n                                    color: \"#77BD4A\",\n                                  }}\n                                >\n                                  {i.reward}\n                                </StyledTableCell>\n                              </StyledTableRow>\n                            );\n                          })\n                        : null}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nexport default Stacks;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box, Button, Typography, createMuiTheme } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\nimport { BiBasket } from \"react-icons/bi\";\nimport StakPopup from \"../stakeModal/stakeModal\";\nimport UnStakeModal from \"../unStakeModal/unStakemodal\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Countdown from \"react-countdown\";\nimport App from \"./react-timer-hook\";\nimport SyncAltIcon from \"@material-ui/icons/SyncAlt\";\nimport PausedTable from \"../pausedTransactionsTable\";\nimport {\n  TableFooter,\n  TablePagination,\n  useTheme,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  LastPage,\n  FirstPage,\n  KeyboardArrowLeft,\n  KeyboardArrowRight,\n} from \"@material-ui/icons\";\nimport { contractAddress } from \"../../utils/constants\";\nimport TronGrid from \"trongrid\";\n\nimport Web3 from \"web3\";\n\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost8545\");\nconst CountdownComponent = (data) => {};\nconst Completionist = () => <span>You are good to go!</span>;\n\n// Renderer callback with condition\nconst renderer = ({ hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Render a completed state\n    return <Completionist />;\n  } else {\n    // Render a countdown\n    return (\n      <span>\n        {hours}:{minutes}:{seconds}\n      </span>\n    );\n  }\n};\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 10,\n    // marginLeft: 30\n  },\n  table: {\n    backgroundColor: \"#222A31 !important\",\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  box: {\n    borderRadius: 50,\n    width: 50,\n    style: { width: \"5rem\", height: \"5rem\" },\n  },\n\n  // typeoGrapyColor: theme.palette.text.secondary\n\n  IconSvg: {\n    // padding: theme.spacing(3, 2),\n    height: 200,\n    verticalAlign: \"middle\",\n  },\n\n  box_Ions: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    color: \"white\",\n    alignItems: \"center\",\n  },\n\n  boxColor: {\n    backgroundColor: \"#08d765\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    color: \"white\",\n\n    alignItems: \"center\",\n  },\n\n  box1: {\n    // backgroundColor: \"#27273d\",\n    // backgroundImage:\n    //   \"linear-gradient(90deg, rgba(57,55,62,1) 26%, rgba(54,73,108,1) 53%, rgba(28,35,47,1) 84%)\",\n    borderRadius: \"0px\",\n    /* opacity: 0.9; */\n    /* background-position: cover; */\n    backgroundSize: \"cover\",\n    backgroundPosition: \"bottom\",\n  },\n\n  Dashboard_boxButton: {\n    // -webkit-appearance: \"none\",\n    transition: \"all 0.20s ease-in-out\",\n    backgroundColor: \"#08d765\",\n    // backgroundImage: \"linear-gradient(45deg, #93c34a 0%, #52af4c 100%)\",\n    border: \"0\",\n    outline: \"0\",\n    position: \"relative\",\n    backgroundSize: \"100% 100%\",\n    borderRadius: \"100px\",\n    fontSize: \"1.3rem\",\n    lineHeight: \"1.6rem\",\n    fontFamily: \"Source Code Pro\",\n    borderRadius: \"2px solid blue\",\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    background:\n      \"linear-gradient(90deg, rgba(57,55,62,1) 26%, rgba(54,73,108,1) 53%\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction Stacks() {\n  const classes = useStyles();\n  const [openStake, setOpenStake] = React.useState(false);\n  const [openUnstake, setOpenUnStake] = React.useState(false);\n  const [totalMaxRewards, setTotalMaxRewards] = React.useState(0);\n  const [totalstakes, setStakes] = React.useState([]);\n\n  const getReducer = useSelector((state) => state.UserReducer);\n\n  const {\n    atStake,\n    userAccountAddress,\n    metaMaskDecentralized,\n    stakingDcentralized,\n  } = getReducer;\n\n  const [userAmountOfDeposits, setUserAmountOfDeposits] = useState(0);\n  const [withdrawRef, setWithdrawRef] = useState(0);\n  const [totalReward, setTotalReward] = useState(0);\n  const [totalWithdrawn, setTotalWithdrawn] = useState(0);\n\n  const [\n    bonusBalanceAndAvailableRefReward,\n    setBonusBalanceAndAvailableRefReward,\n  ] = useState(0);\n\n  const repeatedelyGetUserStake = async () => {\n    if (metaMaskDecentralized && userAccountAddress && stakingDcentralized) {\n      try {\n        let contract = await window?.tronWeb?.contract().at(contractAddress);\n        let userDiv = await contract\n          .getUserDividends(userAccountAddress)\n          .call();\n        setTotalReward(userDiv?._hex / 1000000);\n      } catch (error) {\n        // User denied account access...\n        toast.error(error);\n      }\n    }\n  };\n  const [usdRate, setUsdRate] = useState(0);\n  const [price, setPrice] = useState(0);\n  useEffect(async () => {\n    await axios\n      .get(\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,TRX,IOT&tsyms=USD\"\n      )\n      .then((res) => {\n        const cryptos = res.data;\n\n        setUsdRate(cryptos[\"TRX\"].USD);\n      });\n  }, []);\n  const BuyTokenFunction = async () => {\n    if (metaMaskDecentralized && userAccountAddress && stakingDcentralized) {\n      try {\n        let contract = await window?.tronWeb?.contract().at(contractAddress);\n        let res = await contract\n          .getUserReferralBonus(userAccountAddress)\n          .call();\n        let contract1 = await window?.tronWeb?.contract().at(contractAddress);\n        let priceObj = await contract1.price().call();\n        setPrice(priceObj?._hex / 1000000);\n        let refusers = await contract.refusers(userAccountAddress).call();\n        let userDiv = await contract\n          .getUserDividends(userAccountAddress)\n          .call();\n\n        let UWithdraw = await contract\n          .getUserTotalDeposits(userAccountAddress)\n          .call();\n\n        setTotalReward(userDiv?._hex / 1000000);\n        setTotalWithdrawn(UWithdraw?._hex / 1000000);\n        setWithdrawRef(refusers?.withdrawRef?._hex / 1000000);\n        setBonusBalanceAndAvailableRefReward(res?._hex / 1000000);\n      } catch (error) {\n        console.log(\"error\", error);\n        toast.error(error);\n      }\n    }\n  };\n  const handleUpdateValues = () => {\n    BuyTokenFunction();\n  };\n  useEffect(() => {\n    if (localStorage.getItem(\"reload\") === true) {\n      setTimeout(() => {\n        BuyTokenFunction();\n        localStorage.setItem(\"reload\", false);\n      }, 3000);\n    }\n  });\n  React.useEffect(() => {\n    BuyTokenFunction();\n    setInterval(() => {\n      repeatedelyGetUserStake();\n    }, 5000);\n  }, []);\n\n  React.useEffect(() => {\n    BuyTokenFunction();\n  }, [metaMaskDecentralized, userAccountAddress, stakingDcentralized]);\n\n  const handleCloseUnStake = () => {\n    setOpenUnStake(false);\n  };\n\n  const handleOpenUnStake = () => {\n    setOpenUnStake(true);\n  };\n\n  const handleCloseStake = () => {\n    setOpenStake(false);\n  };\n\n  const handleOpenStake = () => {\n    setOpenStake(true);\n  };\n\n  useEffect(() => {\n    setInterval(() => {\n      getContractTransferEventsByUser(\"NewDeposit\");\n    }, 300000);\n    getContractTransferEventsByUser(\"NewDeposit\");\n  }, []);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const [rows, setRows] = useState([]);\n  const getContractTransferEventsByUser = async (eventName) => {\n    let result = [];\n    let tronGrid = new TronGrid(window?.tronWeb);\n    try {\n      let continueToken = \"\";\n      let res = await tronGrid.contract.getEvents(contractAddress, {\n        only_confirmed: true,\n        event_name: eventName,\n        limit: 200,\n      });\n      let newArr = [];\n      let totalMaxReward = 0;\n      // change condition\n      console.log(\"==================>\", res?.data);\n      res.data.forEach((element) => {\n        if (\n          window?.tronWeb?.address?.fromHex(element?.result?.user) ===\n          userAccountAddress\n        ) {\n          let d = element?.result?.Duration;\n          let amounT = element?.result?.amount;\n          let calculatedMaxReward = (\n            (amounT / 1000000) *\n            (parseInt(d) === 7 ? 0.01 : parseInt(d) === 14 ? 0.02 : 0.03) *\n            parseInt(d)\n          ).toFixed(3);\n\n          totalMaxReward =\n            parseFloat(totalMaxReward) + parseFloat(calculatedMaxReward);\n          newArr.push({\n            transaction_id: element?.transaction_id,\n            token: element?.result?.amount,\n            duration: element?.result?.Duration,\n            userId: window?.tronWeb?.address?.fromHex(element?.result?.user),\n            timeStamp: element?.block_timestamp,\n            maxReward: calculatedMaxReward,\n          });\n        }\n      });\n      setTotalMaxRewards(totalMaxReward);\n\n      setRows([...newArr]);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      return result;\n    }\n  };\n  //new code\n\n  // totalstakes &&\n  // totalstakes.map((i, index) => {\n  //     return createData(\n  //       +index + +1,\n  //       moment.unix(i.timeStamp.slice(0, 10)).format(\"MMM/DD/YYYY\"),\n  //       i.hash.slice(0, 10) + \".....\" + i.hash.slice(59),\n  //       web3.utils.fromWei(i.value)\n  //     );\n  //   });\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container alignItems=\"center\">\n        <Grid item lg={6} xs className=\"box\">\n          <Box display=\"flex\" className={classes.box1} m={1}>\n            <Box\n              width=\"200px\"\n              borderRadius=\"20px 0px 0px 20px\"\n              style={{}}\n              p={1}\n            >\n              <Box m=\"10px\" height=\"70px\" className={classes.boxColor}>\n                <AccountBalanceWalletIcon />\n              </Box>\n            </Box>\n\n            <Box\n              width=\"100%\"\n              height=\"auto\"\n              borderRadius=\"20px 20px 20px 20px\"\n              style={{ color: \"#ffff\" }}\n              pt={2}\n              alignItems=\"center\"\n            >\n              <Typography color=\"colorText.main !important\">\n                {\" \"}\n                Your stake\n              </Typography>\n              <Typography variant=\"h5\" color=\"colorText.main !important\">\n                {\" \"}\n                {totalWithdrawn} ChargeV2\n              </Typography>\n              <Typography color=\"colorText.main !important\">\n                {\" \"}\n                3% Daily Reward\n              </Typography>\n            </Box>\n            <Box\n              borderRadius=\"0px 20px 20px 0px\"\n              minWidth=\"100px\"\n              className=\"box_two\"\n              p={2}\n              textAlign=\"center\"\n              style={{ color: \"#ffff\", backgroundColor: \"#51383F\" }}\n            >\n              <Typography variant=\"h5\">\n                $\n                {price && totalWithdrawn\n                  ? parseFloat(totalWithdrawn * (price * usdRate)).toFixed(2)\n                  : 0}\n                <br />\n                <sup>USD</sup>\n              </Typography>\n            </Box>\n          </Box>\n        </Grid>\n\n        <Grid item lg={6} xs>\n          <Box display=\"flex\" className={classes.box1} m={1}>\n            <Box\n              width=\"200px\"\n              borderRadius=\"20px 0px 0px 20px\"\n              style={{}}\n              p={1}\n            >\n              <Box\n                m=\"10px\"\n                // borderRadius=\"10px\"\n                height=\"70px\"\n                className={classes.boxColor}\n              >\n                <AccountBalanceWalletIcon />\n              </Box>\n            </Box>\n\n            <Box\n              borderRadius=\"0px 20px 20px 0px\"\n              width=\"100%\"\n              height=\"auto\"\n              style={{ color: \"#ffff\" }}\n              pt={3}\n              alignItems=\"center\"\n            >\n              <Typography color=\"colorText.main !important\">\n                {\" \"}\n                Available Reward\n              </Typography>\n              <Typography variant=\"h5\" color=\"colorText.main !important\">\n                {totalReward ? parseFloat(totalReward).toFixed(5) : 0} ChargeV2\n                &nbsp;($\n                {price && totalReward\n                  ? parseFloat(totalReward * (price * usdRate)).toFixed(2)\n                  : 0}\n                )\n              </Typography>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <Grid lg={12} xs style={{ textAlign: \"center\" }}>\n        <Box m=\"10px\" color=\"#08d765\">\n          <Typography variant=\"h4\" component=\"h4\">\n            Stake Your ChargeV2\n          </Typography>\n          <Typography>Earn Reward upto 3% Daily !</Typography>\n        </Box>\n      </Grid>\n\n      <Grid container>\n        {/* <Grid item lg={6} xs>\n          <Box\n            className={classes.box1}\n            borderRadius=\"20px 20px 20px 20px\"\n            style={{}}\n            m={1}\n          >\n            <Box display=\"flex\">\n              <Box\n                borderRadius=\"20px 0px 0px 0px\"\n                width=\"100px\"\n                style={{}}\n                p={1}\n              >\n                <Box\n                  m=\"10px\"\n                  height=\"70px\"\n                  className={(classes.box_Ions, classes.boxColor)}\n                >\n                  <BiBasket fontSize=\"large\" />\n                </Box>\n              </Box>\n\n              <Box\n                width=\"300px\"\n                height=\"auto\"\n                style={{ color: \"#ffff\" }}\n                pt={3}\n                alignItems=\"center\"\n              >\n                <Typography variant=\"h6\">\n                  Get Daily Reward on your Stake. 3% Daily Reward\n                </Typography>\n              </Box>\n            </Box>\n\n            <Box textAlign=\"center\" p={1}></Box>\n          </Box>\n        </Grid> */}\n        <Grid item lg={6} xs>\n          <Box\n            className={classes.box1}\n            borderRadius=\"20px 20px 20px 20px\"\n            style={{}}\n            m={1}\n          >\n            <Box display=\"flex\">\n              <Box\n                borderRadius=\"20px 0px 0px 0px\"\n                width=\"100px\"\n                style={{}}\n                p={1}\n              >\n                <Box\n                  m=\"10px\"\n                  // borderRadius=\"10px\"\n                  height=\"70px\"\n                  className={(classes.box_Ions, classes.boxColor)}\n                >\n                  <BiBasket fontSize=\"large\" />\n                </Box>\n              </Box>\n\n              <Box\n                width=\"300px\"\n                height=\"auto\"\n                style={{ color: \"#ffff\" }}\n                pt={3}\n                alignItems=\"center\"\n              >\n                <Typography variant=\"h6\">\n                  Maximum Reward\n                  <br />\n                  {totalMaxRewards} ChargeV2 &nbsp;($\n                  {price && totalMaxRewards\n                    ? parseFloat(totalMaxRewards * (price * usdRate)).toFixed(5)\n                    : 0}\n                  )\n                </Typography>\n              </Box>\n            </Box>\n\n            <Box textAlign=\"center\" p={1}></Box>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <Grid container>\n        <Grid item xs>\n          <Box\n            className={classes.box1}\n            borderRadius=\"20px 20px 20px 20px\"\n            style={{}}\n            m={1}\n          >\n            <Box m=\"30px\">\n              <Button\n                onClick={handleOpenStake}\n                className={classes.Dashboard_boxButton}\n                color=\"primary\"\n                variant=\"outlined\"\n                style={{\n                  color: \"#ffff\",\n                  padding: \"5px 0px 5px 0px\",\n                }}\n                fullWidth\n              >\n                Stake\n              </Button>\n            </Box>\n\n            <Box textAlign=\"center\" p={1}></Box>\n          </Box>\n        </Grid>\n      </Grid>\n\n      {/* Table */}\n\n      {/* <PausedTable /> */}\n      <Grid container>\n        <Grid item xs={12}>\n          <Box className={classes.tableBox}>\n            <div className={classes.top} style={{ marginTop: 20 }}>\n              <h6 className=\"white\">Recent Stake Transactions</h6>\n              {/* <Button className={classes.btn}>Active</Button> */}\n            </div>\n            <TableContainer\n              component={Paper}\n              className={classes.tableTransparnet}\n            >\n              <Table\n                className={classes.table}\n                aria-label=\"custom pagination table\"\n              >\n                <TableHead className={classes.tableHeader}>\n                  <TableRow>\n                    <TableCell\n                      style={{ width: 160, color: \"white\" }}\n                      align=\"left\"\n                    >\n                      Transaction ID\n                    </TableCell>\n\n                    <TableCell style={{ width: 160, color: \"white\" }}>\n                      Source\n                    </TableCell>\n                    <TableCell\n                      style={{ width: 160, color: \"white\" }}\n                      align=\"left\"\n                    >\n                      Days Left\n                    </TableCell>\n                    <TableCell\n                      style={{ width: 160, color: \"white\" }}\n                      align=\"left\"\n                    >\n                      Amount\n                    </TableCell>\n                    <TableCell\n                      style={{ width: 160, color: \"white\" }}\n                      align=\"left\"\n                    >\n                      Duration\n                    </TableCell>\n                    <TableCell\n                      style={{ width: 160, color: \"white\" }}\n                      align=\"left\"\n                    >\n                      Max Reward\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody className={classes.tableBody}>\n                  {(rowsPerPage > 0\n                    ? rows.slice(\n                        page * rowsPerPage,\n                        page * rowsPerPage + rowsPerPage\n                      )\n                    : rows\n                  ).map((row) => (\n                    <TableRow key={row.name}>\n                      <TableCell\n                        style={{ color: \"white\" }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.transaction_id.slice(0, 8) +\n                          \"...\" +\n                          row.transaction_id.slice(56, 64)}\n                      </TableCell>\n                      <TableCell\n                        style={{ width: 160, color: \"white\" }}\n                        align=\"left\"\n                      >\n                        {row.userId}\n                      </TableCell>\n                      <TableCell\n                        style={{ width: 160, color: \"white\" }}\n                        align=\"left\"\n                      >\n                        <App\n                          timeStamp={moment(row.timeStamp)\n                            .add(parseInt(row.duration), \"days\")\n                            .toISOString()}\n                        />\n                        {/* {console.log(moment(row.timeStamp).toString())}\n                        <Countdown\n                          date={moment(row.timeStamp).toString() + 1}\n                          renderer={renderer}\n                        /> */}\n                        {/* {moment(row.timeStamp)\n                          .add(parseInt(row.duration), \"days\")\n                          .format(\"MMM/DD/YYYY\")\n                          .toString()} */}\n                      </TableCell>\n                      <TableCell\n                        style={{ width: 160, color: \"white\" }}\n                        align=\"left\"\n                      >\n                        {row.token / 1000000}\n                      </TableCell>\n                      <TableCell\n                        style={{ width: 160, color: \"white\" }}\n                        align=\"left\"\n                      >\n                        {row.duration}\n                      </TableCell>\n                      <TableCell\n                        style={{ width: 160, color: \"white\" }}\n                        align=\"left\"\n                      >\n                        {row?.maxReward}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                <TableFooter>\n                  <TableRow>\n                    <TablePagination\n                      style={{ color: \"white\" }}\n                      rowsPerPageOptions={[\n                        5,\n                        10,\n                        25,\n                        { label: \"All\", value: -1 },\n                      ]}\n                      colSpan={6}\n                      count={rows.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      SelectProps={{\n                        inputProps: { \"aria-label\": \"rows per page\" },\n                        native: true,\n                      }}\n                      onChangePage={handleChangePage}\n                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                      ActionsComponent={TablePaginationActions}\n                    />\n                  </TableRow>\n                </TableFooter>\n              </Table>\n            </TableContainer>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <StakPopup\n        handleUpdateValues={handleUpdateValues}\n        open={openStake}\n        handleClose={handleCloseStake}\n      />\n      <UnStakeModal open={openUnstake} handleClose={handleOpenUnStake} />\n    </div>\n  );\n}\nexport default Stacks;\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles2();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <LastPage style={{ color: \"white\" }} />\n        ) : (\n          <FirstPage style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight style={{ color: \"white\" }} />\n        ) : (\n          <KeyboardArrowLeft style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft style={{ color: \"white\" }} />\n        ) : (\n          <KeyboardArrowRight style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <FirstPage style={{ color: \"white\" }} />\n        ) : (\n          <LastPage style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n    </div>\n  );\n}\n\n// TablePaginationActions.propTypes = {\n//   count: PropTypes.number.isRequired,\n//   onChangePage: PropTypes.func.isRequired,\n//   page: PropTypes.number.isRequired,\n//   rowsPerPage: PropTypes.number.isRequired,\n// };\n\nfunction createData(number, calories, fat, amount) {\n  return { number, calories, fat, amount };\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 20,\n    paddingRight: \"5px\",\n    width: \"100%\",\n  },\n  card: {\n    borderRadius: 0,\n    backgroundSize: \"cover\",\n    backgroundColor: \"#222a31\",\n    // opacity: 0.8,\n    width: \"100%\",\n    padding: 10,\n    height: \"auto\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  paper: {\n    backgroundColor: \"transparent\",\n    border: 0,\n  },\n  left: {\n    backgroundColor: \"#08d765\",\n    height: 90,\n    width: 90,\n    borderRadius: 0,\n  },\n  right: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginLeft: 20,\n  },\n  tableBox: {\n    borderRadius: 20,\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.03)\",\n    backgroundSize: \"cover\",\n    backgroundColor: \"#222a31\",\n    // padding: 25\n  },\n  btn: {\n    backgroundColor: \"#1282C2\",\n    borderRadius: 20,\n    fontSize: 10,\n    float: \"right\",\n    color: \"white\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#1282C2\",\n    },\n  },\n  top: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderBottom: \"2px solid #19B5CD\",\n    padding: 25,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableTransparnet: {\n    padding: 25,\n    borderRadius: 20,\n    // opacity: \".5\",\n    backgroundColor: \"#222a31\",\n    backgroundSize: \"cover\",\n    // backgroundColor: \"#326BB1\",\n  },\n  tableHeader: {\n    backgroundColor: \"#222a31\",\n  },\n  tableBody: {},\n}));\n","import {\n  Grid,\n  Paper,\n  makeStyles,\n  Box,\n  Button,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableFooter,\n  TablePagination,\n  useTheme,\n  IconButton,\n  TableHead,\n} from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  LastPage,\n  FirstPage,\n  KeyboardArrowLeft,\n  KeyboardArrowRight,\n} from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useStyles } from \"./styles\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Web3 from \"web3\";\nimport { contractAddress } from \"../../utils/constants\";\nimport TronGrid from \"trongrid\";\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost8545\");\n// table data & styling\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nfunction Wallet() {\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const getReducer = useSelector((state) => state.UserReducer);\n\n  const {\n    metaMaskDecentralized,\n    userAccountAddress,\n    stakingDcentralized,\n  } = getReducer;\n  const [withdrawRef, setWithdrawRef] = useState(0);\n  const [userPersonalBalance, setUserPersonalBalance] = useState(0);\n  const [atStake, SetAtStake] = useState(0);\n\n  const [\n    bonusBalanceAndAvailableRefReward,\n    setBonusBalanceAndAvailableRefReward,\n  ] = useState(0);\n  const [usdRate, setUsdRate] = useState(0);\n  const [price, setPrice] = useState(0);\n  useEffect(async () => {\n    await axios\n      .get(\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,TRX,IOT&tsyms=USD\"\n      )\n      .then((res) => {\n        const cryptos = res.data;\n\n        setUsdRate(cryptos[\"TRX\"].USD);\n      });\n  }, []);\n  const BuyTokenFunction = async () => {\n    if (metaMaskDecentralized && userAccountAddress && stakingDcentralized) {\n      try {\n        let contract = await window?.tronWeb?.contract().at(contractAddress);\n        let res = await contract\n          .getUserReferralBonus(userAccountAddress)\n          .call();\n        let userDiv = await contract.balanceOf(userAccountAddress).call();\n\n        let UWithdraw = await contract\n          .getUserTotalDeposits(userAccountAddress)\n          .call();\n        let contract1 = await window?.tronWeb?.contract().at(contractAddress);\n        let priceObj = await contract1.price().call();\n        setPrice(priceObj?._hex / 1000000);\n        setUserPersonalBalance(userDiv?._hex / 1000000);\n        SetAtStake(UWithdraw?._hex / 1000000);\n        setBonusBalanceAndAvailableRefReward(res?._hex / 1000000);\n      } catch (error) {\n        // User denied account access...\n        console.log(\"error\", error);\n        toast.error(error);\n      }\n    }\n  };\n  //\n  React.useEffect(() => {\n    BuyTokenFunction();\n  }, []);\n\n  React.useEffect(() => {\n    BuyTokenFunction();\n  }, [metaMaskDecentralized, userAccountAddress, stakingDcentralized]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  useEffect(() => {\n    getContractTransferEventsByUser(\"Sell\");\n    setInterval(() => {\n      getContractTransferEventsByUser(\"Sell\");\n      console.log(\"updating 1\");\n    }, 300000);\n  }, []);\n\n  const [rows, setRows] = useState([]);\n  const getContractTransferEventsByUser = async (eventName) => {\n    let result = [];\n    let tronGrid = new TronGrid(window?.tronWeb);\n    try {\n      let continueToken = \"\";\n      let res = await tronGrid.contract.getEvents(contractAddress, {\n        only_confirmed: true,\n        event_name: eventName,\n        limit: 30,\n        filters: { id: userAccountAddress },\n      });\n      let res2 = await tronGrid.contract.getEvents(contractAddress, {\n        only_confirmed: true,\n        event_name: \"Buy\",\n        limit: 30,\n        filters: { id: userAccountAddress },\n      });\n      let res3 = await tronGrid.contract.getEvents(contractAddress, {\n        only_confirmed: true,\n        event_name: \"Withdrawan\",\n        limit: 30,\n        filters: { id: userAccountAddress },\n      });\n\n      let newArr = [];\n      res2.data.forEach((element) => {\n        newArr.push({\n          transaction_id: element?.transaction_id,\n          token: element?.result[0],\n          source: element?.block_timestamp,\n        });\n      });\n      res3.data.forEach((element) => {\n        newArr.push({\n          transaction_id: element?.transaction_id,\n          token: element?.result[0],\n          source: element?.block_timestamp,\n        });\n      });\n      res.data.forEach((element) => {\n        newArr.push({\n          transaction_id: element?.transaction_id,\n          token: element?.result[0],\n          source: element?.block_timestamp,\n        });\n      });\n      let newAr = newArr.sort((a, b) => b.source - a.source);\n      setRows([...newAr]);\n    } catch (error) {\n      console.error(error);\n      console.log(error);\n    } finally {\n      return result;\n    }\n  };\n\n  return (\n    <Grid container className={classes.root} spacing={3}>\n      <Grid item xs={12} sm={6} lg={4}>\n        <Paper className={classes.card}>\n          <div className={classes.left}></div>\n          <div className={classes.right}>\n            <p className=\"margin-none white\">Total ChargeV2 Balance</p>\n            <h6 className=\"white\">\n              {userPersonalBalance ? userPersonalBalance : 0} ChargeV2 &nbsp;($\n              {price && userPersonalBalance\n                ? parseFloat(userPersonalBalance * (price * usdRate)).toFixed(5)\n                : 0}\n              )\n            </h6>\n            <p className=\"margin-none small-para white\">\n              Stake and earn up to 3% Per Month, Stake Now\n            </p>\n          </div>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <Paper className={classes.card}>\n          <div className={classes.left}></div>\n          <div className={classes.right}>\n            <p className=\"margin-none white\">Deposit Stakes</p>\n            <h6 className=\"white\">\n              {atStake ? atStake : 0} ChargeV2 &nbsp;($\n              {price && atStake\n                ? parseFloat(atStake * (price * usdRate)).toFixed(5)\n                : 0}\n              )\n            </h6>\n          </div>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <Paper className={classes.card}>\n          <div className={classes.left}></div>\n          <div className={classes.right}>\n            <p className=\"margin-none white\">Bonus Balance</p>\n            <h6 className=\"white\">\n              {bonusBalanceAndAvailableRefReward\n                ? bonusBalanceAndAvailableRefReward\n                : 0}{\" \"}\n              ChargeV2 &nbsp;($\n              {price && bonusBalanceAndAvailableRefReward\n                ? parseFloat(\n                    bonusBalanceAndAvailableRefReward * (price * usdRate)\n                  ).toFixed(5)\n                : 0}\n              )\n            </h6>\n          </div>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Box className={classes.tableBox}>\n          <div className={classes.top}>\n            <h6 className=\"white\">Recent Wallet Transactions</h6>\n            <Button className={classes.btn}>Active</Button>\n          </div>\n          <TableContainer\n            component={Paper}\n            className={classes.tableTransparnet}\n          >\n            <Table\n              className={classes.table}\n              aria-label=\"custom pagination table\"\n            >\n              <TableHead className={classes.tableHeader}>\n                <TableRow>\n                  <TableCell style={{ width: 160, color: \"white\" }}>\n                    #\n                  </TableCell>\n                  <TableCell\n                    style={{ width: 160, color: \"white\" }}\n                    align=\"left\"\n                  >\n                    Date\n                  </TableCell>\n                  <TableCell\n                    style={{ width: 160, color: \"white\" }}\n                    align=\"left\"\n                  >\n                    Transaction ID\n                  </TableCell>\n                  <TableCell\n                    style={{ width: 160, color: \"white\" }}\n                    align=\"left\"\n                  >\n                    amount\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody className={classes.tableBody}>\n                {(rowsPerPage > 0\n                  ? rows.slice(\n                      page * rowsPerPage,\n                      page * rowsPerPage + rowsPerPage\n                    )\n                  : rows\n                ).map((row, index) => (\n                  <TableRow key={row.transaction_id}>\n                    <TableCell style={{ color: \"white\" }} align=\"left\">\n                      {index + 1}\n                    </TableCell>\n                    <TableCell style={{ color: \"white\" }} align=\"left\">\n                      {moment(row.source).format(\"MMM/DD/YYYY\").toString()}\n                    </TableCell>\n                    <TableCell style={{ color: \"white\" }} scope=\"row\">\n                      {row.transaction_id.slice(0, 8) +\n                        \"...\" +\n                        row.transaction_id.slice(56, 64)}\n                    </TableCell>\n\n                    <TableCell style={{ color: \"white\" }} align=\"left\">\n                      {row.token / 1000000}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TablePagination\n                    style={{ color: \"white\" }}\n                    rowsPerPageOptions={[5, 10, 25]}\n                    colSpan={4}\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    SelectProps={{\n                      inputProps: { \"aria-label\": \"rows per page\" },\n                      native: true,\n                    }}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                    ActionsComponent={TablePaginationActions}\n                  />\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </TableContainer>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Wallet;\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles2();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <LastPage style={{ color: \"white\" }} />\n        ) : (\n          <FirstPage style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight style={{ color: \"white\" }} />\n        ) : (\n          <KeyboardArrowLeft style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft style={{ color: \"white\" }} />\n        ) : (\n          <KeyboardArrowRight style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <FirstPage style={{ color: \"white\" }} />\n        ) : (\n          <LastPage style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n    </div>\n  );\n}\n\n// TablePaginationActions.propTypes = {\n//   count: PropTypes.number.isRequired,\n//   onChangePage: PropTypes.func.isRequired,\n//   page: PropTypes.number.isRequired,\n//   rowsPerPage: PropTypes.number.isRequired,\n// };\n\nfunction createData(number, calories, fat, amount) {\n  return { number, calories, fat, amount };\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 20,\n    paddingRight: \"5px\",\n    width: \"100%\",\n  },\n  formField: {\n    width: \"100%\",\n    color: \"#1282C2\",\n    backgroundColor: \"rgba(57,55,62,1)\",\n    borderColor: \"#19C6C7\",\n    \"&:focus\": {\n      borderColor: \"#19C6C7\",\n    },\n    \"& .MuiInputBase-input\": {\n      color: \"#fff\",\n    },\n    \"& .MuiFormLabel-root\": {\n      color: \"#fff !important\",\n    },\n  },\n  Dashboard_boxButton: {\n    // -webkit-appearance: \"none\",\n    transition: \"all 0.20s ease-in-out\",\n    backgroundColor: \"#08d765\",\n    // backgroundImage: \"linear-gradient(45deg, #93c34a 0%, #52af4c 100%)\",\n    border: \"0\",\n    outline: \"0\",\n    position: \"relative\",\n    backgroundSize: \"100% 100%\",\n    borderRadius: \"100px\",\n    fontSize: \"1.3rem\",\n    lineHeight: \"1.6rem\",\n    fontFamily: \"Source Code Pro\",\n    borderRadius: \"2px solid blue\",\n  },\n  card: {\n    borderRadius: 0,\n    backgroundSize: \"cover\",\n    backgroundColor: \"#222a31\",\n    // opacity: 0.8,\n    width: \"100%\",\n    padding: 10,\n    height: \"auto\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  paper: {\n    backgroundColor: \"transparent\",\n    border: 0,\n  },\n  left: {\n    backgroundColor: \"#08d765\",\n    height: 90,\n    width: 90,\n    borderRadius: 0,\n  },\n  right: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginLeft: 20,\n  },\n  tableBox: {\n    borderRadius: 20,\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.03)\",\n    backgroundSize: \"cover\",\n    backgroundColor: \"#222a31\",\n    // padding: 25\n  },\n  btn: {\n    backgroundColor: \"#1282C2\",\n    borderRadius: 20,\n    fontSize: 10,\n    float: \"right\",\n    color: \"white\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#1282C2\",\n    },\n  },\n  top: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderBottom: \"2px solid #19B5CD\",\n    padding: 25,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableTransparnet: {\n    padding: 25,\n    borderRadius: 20,\n    // opacity: \".5\",\n    backgroundColor: \"#222a31\",\n    backgroundSize: \"cover\",\n    // backgroundColor: \"#326BB1\",\n  },\n  tableHeader: {\n    backgroundColor: \"#222a31\",\n  },\n  tableBody: {},\n}));\n","import React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Modal,\n  Backdrop,\n  Fade,\n  Grid,\n  IconButton,\n  TextField,\n  FormControl,\n  InputLabel,\n  Input,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport TronHelper from \"../../utils/TronHelper\";\nimport { StakeToken } from \"../../userDataFunctions\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Select from \"@material-ui/core/Select\";\nimport { useSelector } from \"react-redux\";\nimport {\n  contractAddress,\n  swapingAddress,\n  approveSwapingAddress,\n} from \"../../utils/constants\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(3),\n    maxHeight: 450,\n    maxWidth: 900,\n    borderRadius: 20,\n    backgroundSize: \"cover\",\n    backgroundColor: \"#222A31\",\n  },\n  btn: {\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  formField: {\n    width: \"100%\",\n    color: \"#1282C2\",\n    backgroundColor: \"rgba(57,55,62,1)\",\n    borderColor: \"#19C6C7\",\n    \"&:focus\": {\n      borderColor: \"#19C6C7\",\n    },\n    \"& .MuiInputBase-input\": {\n      color: \"#fff\",\n    },\n    \"& .MuiFormLabel-root\": {\n      color: \"#fff !important\",\n    },\n  },\n  float: {},\n  clearBtn: {\n    backgroundColor: \"#D33949\",\n    color: \"white\",\n    borderRadius: 20,\n    marginTop: 10,\n    float: \"right\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#D33949\",\n    },\n  },\n  withDrawBtn: {\n    background: \"linear-gradient(90deg, #08d765 10%, #08d765 90%)\",\n    backgroundSize: \"200% 100%\",\n    width: 150,\n    color: \"white\",\n    borderRadius: 15,\n    marginTop: 10,\n    marginLeft: 10,\n    paddingRight: 5,\n    float: \"right\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n}));\n\nexport default function StakPopup({ handleUpdateValues, handleClose, open }) {\n  const classes = useStyles();\n  const [numberOfTokens, setNumberOfTokens] = React.useState(\"\");\n  const [getDate, setGetDate] = React.useState(\"\");\n  const [loader, setLoader] = React.useState(false);\n  const [loaderFor, setLoaderFor] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [allowance, setAllowance] = useState(0);\n  const [toChargeV2, setToChargeV2] = useState(0);\n  const getReducer = useSelector((state) => state.UserReducer);\n\n  const {\n    metaMaskDecentralized,\n    userAccountAddress,\n    oneTokenPrice,\n    eatherInUsdt,\n    stakingDcentralized,\n  } = getReducer;\n\n  const closeTheModal = (isTrue) => {\n    if (isTrue) {\n      handleClose();\n    }\n  };\n\n  const ManageLoader = (isFalse) => {\n    setLoader(isFalse);\n  };\n  const SwappingTokens = async () => {\n    if (numberOfTokens === \"\") {\n    } else {\n      setLoader(true);\n      setLoaderFor(\"swap\");\n      if (metaMaskDecentralized && stakingDcentralized && userAccountAddress) {\n        let contract = await window?.tronWeb?.contract().at(swapingAddress);\n        try {\n          contract\n            ?.swapping(numberOfTokens * 100000000)\n            ?.send({\n              feeLimit: 100000000,\n              shouldPollResponse: true,\n            })\n            .then((output) => {\n              handleUpdateValues();\n              localStorage.setItem(\"reload\", true);\n              setLoader(false);\n              toast.success(\"Your transaction has been confirmed\");\n              handleClose();\n              setLoaderFor(\"\");\n              setDisabled(true);\n            })\n            .catch((e) => {\n              toast.error(e.message);\n              handleUpdateValues();\n              localStorage.setItem(\"reload\", true);\n              setLoader(false);\n              setLoaderFor(\"\");\n            });\n          console.log(getDate, numberOfTokens);\n        } catch (e) {\n          toast.error(e.message);\n\n          handleUpdateValues();\n        }\n      }\n    }\n  };\n  const ApproveTokens = async () => {\n    if (numberOfTokens === \"\") {\n    } else {\n      setLoader(true);\n      setLoaderFor(\"approve\");\n      if (metaMaskDecentralized && stakingDcentralized && userAccountAddress) {\n        let contract = await window?.tronWeb\n          ?.contract()\n          .at(approveSwapingAddress);\n        try {\n          let res = await contract\n            ?.allowance(userAccountAddress, swapingAddress)\n            ?.call();\n          let vRes = res?._hex / 100000000;\n          let vRes2 = res?._hex / 1000000;\n          console.log(\"rev\", vRes, vRes2, numberOfTokens);\n          if (vRes < numberOfTokens) {\n            contract\n              ?.approve(swapingAddress, numberOfTokens * 100000000)\n              ?.send({\n                feeLimit: 100000000,\n                shouldPollResponse: true,\n              })\n              .then((output) => {\n                handleUpdateValues();\n                toast.success(\"Your Token has approved\");\n                setDisabled(false);\n                setLoaderFor(\"\");\n                getAllowance();\n              })\n              .catch((e) => {\n                toast.error(e.message);\n\n                handleUpdateValues();\n                localStorage.setItem(\"reload\", true);\n                setLoader(false);\n                setLoaderFor(\"\");\n              });\n          } else {\n          }\n          console.log(getDate, numberOfTokens);\n        } catch (e) {\n          toast.error(e.message);\n          setLoaderFor(\"\");\n          setLoader(false);\n          handleUpdateValues();\n        }\n      }\n    }\n  };\n  const getAllowance = async () => {\n    if (metaMaskDecentralized && stakingDcentralized && userAccountAddress) {\n      let contract = await window?.tronWeb\n        ?.contract()\n        .at(approveSwapingAddress);\n      try {\n        let res = await contract\n          ?.allowance(userAccountAddress, swapingAddress)\n          ?.call();\n        setAllowance(res / 100000000);\n        console.log(\"res\", res / 100000000);\n      } catch (e) {}\n    }\n  };\n  useEffect(() => {\n    getAllowance();\n  }, []);\n\n  const chargeV1ToChargeV2 = async (v) => {\n    try {\n      let contract = await window?.tronWeb?.contract().at(swapingAddress);\n      let value = await contract?.ChargeV1ToChargeV2(v * 100000000)?.call();\n      console.log(\"value\", value?._hex / 1000000);\n      setToChargeV2(value?._hex / 1000000);\n    } catch (error) {}\n  };\n  const changeInputValue = (e) => {\n    setDisabled(true);\n    setNumberOfTokens(e.target.value);\n    chargeV1ToChargeV2(e.target.value);\n  };\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <div className={classes.header}>\n              <div>\n                <h5 className=\"white\" style={{ color: \"green\" }}>\n                  Swap ChargeV2\n                </h5>\n              </div>\n              <IconButton className={classes.btn} onClick={handleClose}>\n                <Close className=\"white\" />\n              </IconButton>\n            </div>\n            <Grid container spacing={3}>\n              <Grid item xs={12} className={classes.marginTop}>\n                <TextField\n                  className={classes.formField}\n                  value={numberOfTokens}\n                  onChange={(e) => changeInputValue(e)}\n                  id=\"outlined-basic\"\n                  label=\"Enter number of tokens\"\n                  variant=\"outlined\"\n                  type=\"number\"\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.marginTop}>\n                <Typography\n                  style={{ color: \"#fff\" }}\n                >{`You get ${toChargeV2} chargeV2!`}</Typography>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={clsx(classes.marginTop, classes.float)}\n              >\n                {loader && loaderFor === \"swap\" ? (\n                  <Button className={classes.withDrawBtn} paddingRight=\"20px\">\n                    Loading...\n                  </Button>\n                ) : (\n                  <Button\n                    disabled={disabled}\n                    onClick={SwappingTokens}\n                    className={classes.withDrawBtn}\n                    paddingRight=\"20px\"\n                  >\n                    Swap\n                  </Button>\n                )}\n                {loader && loaderFor === \"approve\" ? (\n                  <Button className={classes.withDrawBtn} paddingRight=\"20px\">\n                    Loading...\n                  </Button>\n                ) : (\n                  <Button\n                    disabled={!disabled}\n                    onClick={ApproveTokens}\n                    className={classes.withDrawBtn}\n                    paddingRight=\"20px\"\n                  >\n                    Approve\n                  </Button>\n                )}\n              </Grid>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import {\n  Grid,\n  Paper,\n  makeStyles,\n  Box,\n  Button,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableFooter,\n  TablePagination,\n  useTheme,\n  IconButton,\n  TableHead,\n  TextField,\n} from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  LastPage,\n  FirstPage,\n  KeyboardArrowLeft,\n  KeyboardArrowRight,\n} from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useStyles } from \"./styles\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport {\n  contractAddress,\n  swapingAddress,\n  swapingAbi,\n  swapingEvent,\n} from \"../../utils/constants\";\nimport TronGrid from \"trongrid\";\nimport SwipeModal from \"../swipeModal/swipeModal\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nfunction Swaping() {\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [openStake, setOpenStake] = React.useState(false);\n\n  const getReducer = useSelector((state) => state.UserReducer);\n\n  const {\n    metaMaskDecentralized,\n    userAccountAddress,\n    stakingDcentralized,\n  } = getReducer;\n  const [withdrawRef, setWithdrawRef] = useState(0);\n  const [userPersonalBalance, setUserPersonalBalance] = useState(0);\n  const [atStake, SetAtStake] = useState(0);\n  const [usdRate, setUsdRate] = useState(0);\n  const [price, setPrice] = useState(0);\n  useEffect(async () => {\n    await axios\n      .get(\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,TRX,IOT&tsyms=USD\"\n      )\n      .then((res) => {\n        const cryptos = res.data;\n\n        setUsdRate(cryptos[\"TRX\"].USD);\n      });\n  }, []);\n  const [\n    bonusBalanceAndAvailableRefReward,\n    setBonusBalanceAndAvailableRefReward,\n  ] = useState(0);\n\n  const BuyTokenFunction = async () => {\n    if (metaMaskDecentralized && userAccountAddress && stakingDcentralized) {\n      try {\n        let contract1 = await window?.tronWeb?.contract().at(contractAddress);\n        let priceObj = await contract1.price().call();\n        setPrice(priceObj?._hex / 1000000);\n\n        let contract = await window?.tronWeb?.contract().at(swapingAddress);\n        let resChargeV2 = await contract.PriceOfChargeV2().call();\n        let resChargeV1 = await contract.PriceOfChargeV1().call();\n        localStorage.setItem(\"chargeV1\", resChargeV1 / 1000000);\n        localStorage.setItem(\"chargeV2\", resChargeV2 / 1000000);\n      } catch (error) {\n        // User denied account access...\n        console.log(\"error\", error);\n        toast.error(error);\n      }\n    }\n  };\n  //\n  React.useEffect(() => {\n    BuyTokenFunction();\n  }, []);\n\n  React.useEffect(() => {\n    BuyTokenFunction();\n  }, [metaMaskDecentralized, userAccountAddress, stakingDcentralized]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  useEffect(() => {\n    getContractTransferEventsByUser();\n    setInterval(() => {\n      getContractTransferEventsByUser();\n      console.log(\"updating 1\");\n    }, 300000);\n  }, []);\n\n  const [rows, setRows] = useState([]);\n  const getContractTransferEventsByUser = async () => {\n    let result = [];\n    let tronGrid = new TronGrid(window?.tronWeb);\n    try {\n      let continueToken = \"\";\n      let res = await tronGrid.contract.getEvents(swapingEvent, {\n        only_confirmed: true,\n        event_name: \"Swapping\",\n        limit: 30,\n      });\n\n      let newArr = [];\n      console.log(\"res\", res);\n      res.data.forEach((element) => {\n        if (\n          window?.tronWeb?.address?.fromHex(element?.result[0]) ===\n          userAccountAddress\n        ) {\n          newArr.push({\n            chargeV1: element?.result[1] / 10000000000000000,\n            token: element?.result[0],\n            chargeV2: element?.result[2] / 1000000000000,\n            timeStamp: element?.block_timestamp,\n          });\n        }\n      });\n      setRows([...newArr]);\n    } catch (error) {\n      console.error(error);\n      console.log(error);\n    } finally {\n      return result;\n    }\n  };\n  const handleCloseStake = () => {\n    setOpenStake(false);\n  };\n\n  const handleOpenStake = () => {\n    setOpenStake(true);\n  };\n  const handleUpdateValues = () => {\n    // BuyTokenFunction();\n  };\n  return (\n    <Grid container className={classes.root} spacing={3}>\n      <Grid item xs={12} sm={12} lg={12}>\n        <Grid container>\n          <Grid container>\n            <Grid item xs>\n              <Box\n                className={classes.box1}\n                borderRadius=\"20px 20px 20px 20px\"\n                style={{}}\n                m={1}\n              >\n                <Box m=\"30px\">\n                  <Button\n                    className={classes.Dashboard_boxButton}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    style={{\n                      color: \"#ffff\",\n                      padding: \"5px 0px 5px 0px\",\n                    }}\n                    fullWidth\n                    onClick={handleOpenStake}\n                  >\n                    Swap\n                  </Button>\n                </Box>\n\n                <Box textAlign=\"center\" p={1}></Box>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Box className={classes.tableBox}>\n          <div className={classes.top}>\n            <h6 className=\"white\">Recent Swaping Transactions</h6>\n            <Button className={classes.btn}>Active</Button>\n          </div>\n          <TableContainer\n            component={Paper}\n            className={classes.tableTransparnet}\n          >\n            <Table\n              className={classes.table}\n              aria-label=\"custom pagination table\"\n            >\n              <TableHead className={classes.tableHeader}>\n                <TableRow>\n                  <TableCell style={{ width: 160, color: \"white\" }}>\n                    #\n                  </TableCell>\n                  <TableCell\n                    style={{ width: 160, color: \"white\" }}\n                    align=\"left\"\n                  >\n                    Date\n                  </TableCell>\n                  <TableCell\n                    style={{ width: 160, color: \"white\" }}\n                    align=\"left\"\n                  >\n                    Token\n                  </TableCell>\n                  <TableCell\n                    style={{ width: 160, color: \"white\" }}\n                    align=\"left\"\n                  >\n                    Charge v1\n                  </TableCell>\n                  <TableCell\n                    style={{ width: 160, color: \"white\" }}\n                    align=\"left\"\n                  >\n                    Charge v2\n                  </TableCell>\n                  <TableCell\n                    style={{ width: 160, color: \"white\" }}\n                    align=\"left\"\n                  >\n                    Charge v2 $\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody className={classes.tableBody}>\n                {(rowsPerPage > 0\n                  ? rows.slice(\n                      page * rowsPerPage,\n                      page * rowsPerPage + rowsPerPage\n                    )\n                  : rows\n                ).map((row, index) => (\n                  <TableRow key={row.transaction_id}>\n                    <TableCell style={{ color: \"white\" }} align=\"left\">\n                      {index + 1}\n                    </TableCell>\n                    <TableCell style={{ color: \"white\" }} align=\"left\">\n                      {moment(row.timeStamp).format(\"MMM/DD/YYYY\").toString()}\n                    </TableCell>\n                    <TableCell style={{ color: \"white\" }} scope=\"row\">\n                      {row.token.slice(0, 8) +\n                        \"...\" +\n                        row.token.slice(row.token.length - 8, row.token.length)}\n                    </TableCell>\n\n                    <TableCell style={{ color: \"white\" }} align=\"left\">\n                      {row.chargeV1}\n                    </TableCell>\n                    <TableCell style={{ color: \"white\" }} align=\"left\">\n                      {row.chargeV2}\n                    </TableCell>\n                    <TableCell style={{ color: \"white\" }} align=\"left\">\n                      {/* {row.chargeV2} */}\n                      {price && row.chargeV2\n                        ? parseFloat(row.chargeV2 * (price * usdRate)).toFixed(\n                            5\n                          )\n                        : 0}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TablePagination\n                    style={{ color: \"white\" }}\n                    rowsPerPageOptions={[5, 10, 25]}\n                    colSpan={6}\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    SelectProps={{\n                      inputProps: { \"aria-label\": \"rows per page\" },\n                      native: true,\n                    }}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                    ActionsComponent={TablePaginationActions}\n                  />\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </TableContainer>\n        </Box>\n      </Grid>\n      <SwipeModal\n        handleUpdateValues={handleUpdateValues}\n        open={openStake}\n        handleClose={handleCloseStake}\n      />\n    </Grid>\n  );\n}\n\nexport default Swaping;\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles2();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <LastPage style={{ color: \"white\" }} />\n        ) : (\n          <FirstPage style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight style={{ color: \"white\" }} />\n        ) : (\n          <KeyboardArrowLeft style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft style={{ color: \"white\" }} />\n        ) : (\n          <KeyboardArrowRight style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <FirstPage style={{ color: \"white\" }} />\n        ) : (\n          <LastPage style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n    </div>\n  );\n}\n\n// TablePaginationActions.propTypes = {\n//   count: PropTypes.number.isRequired,\n//   onChangePage: PropTypes.func.isRequired,\n//   page: PropTypes.number.isRequired,\n//   rowsPerPage: PropTypes.number.isRequired,\n// };\n\nfunction createData(number, calories, fat, amount) {\n  return { number, calories, fat, amount };\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 20,\n    paddingRight: \"5px\",\n    width: \"100%\",\n    // overflow: \"hidden\"\n  },\n  card: {\n    backgroundColor: \"transparent\",\n    borderRadius: 20,\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.03)\",\n    backgroundSize: \"cover\",\n    width: \"100%\",\n    padding: 10,\n    height: \"auto\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  paper: {\n    backgroundColor: \"transparent\",\n    border: 0,\n    background: \"#14142b\",\n  },\n  left: {\n    backgroundColor: \"#08d765\",\n    height: 90,\n    width: 90,\n    borderRadius: 10,\n    position: \"relative\",\n  },\n  right: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginLeft: 20,\n  },\n  tableBox: {\n    borderRadius: 20,\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.03)\",\n    // background: `linear-gradient(90deg, rgba(57,55,62,1) 26%, rgba(54,73,108,1) 53%, rgba(28,35,47,1) 84%)`,\n    backgroundSize: \"cover\",\n    backgroundColor: \"#326BB1\",\n    // padding: 25\n  },\n  btn: {\n    backgroundColor: \"#1282C2\",\n    borderRadius: 20,\n    fontSize: 10,\n    float: \"right\",\n    color: \"white\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#1282C2\",\n    },\n  },\n  top: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderBottom: \"2px solid #19B5CD\",\n    padding: 25,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableTransparnet: {\n    padding: 25,\n    borderRadius: 20,\n    backgroundColor: \"#222a31\",\n    backgroundSize: \"cover\",\n  },\n  tableHeader: {\n    backgroundColor: \"#222a31\",\n  },\n  tableBody: {},\n  buyTokens: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  button: {\n    color: \"#00ffe9\",\n    border: \"1px solid #00ffe9\",\n    marginLeft: 20,\n    fontWeight: \"bold\",\n    padding: 1,\n    \"&:focus\": {\n      color: \"black\",\n      border: \"1px solid #00ffe9\",\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      color: \"black\",\n      border: \"1px solid #00ffe9\",\n      outline: \"none\",\n      boxShadow: \"none\",\n      backgroundColor: \"#00ffe9\",\n    },\n  },\n  dropDown: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  cirlceBox: {\n    position: \"relative\",\n  },\n  cirlceIcon: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50, -50%)\",\n    color: \"white\",\n  },\n  icon: {\n    fontSize: 60,\n  },\n  notFound: {\n    marginRight: 20,\n  },\n  selectBox: {\n    width: \"100%\",\n  },\n  searchBtn: {\n    borderRadius: 20,\n    background: \"linear-gradient(90deg, #132660 10%, #0062cc 90%)\",\n    backgroundSize: \"200% 100%\",\n    width: 150,\n    color: \"white\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n  buyIcon: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    color: \"white\",\n    fontSize: \"30px\",\n    // backgroundColor:\"#326BB1\"\n  },\n  outlineBtn: {\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n}));\n","import {\n  Grid,\n  Paper,\n  makeStyles,\n  Box,\n  Button,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableFooter,\n  TablePagination,\n  useTheme,\n  IconButton,\n  TableHead,\n  FormControl,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport {\n  LastPage,\n  FirstPage,\n  KeyboardArrowLeft,\n  KeyboardArrowRight,\n} from \"@material-ui/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport BuyPopup from \"../buyModal\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\nimport { useStyles } from \"./styles\";\nimport { useSelector } from \"react-redux\";\nimport { contractAddress } from \"../../utils/constants\";\nimport TronGrid from \"trongrid\";\nimport axios from \"axios\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nfunction Transactions() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [eventName, setEventName] = React.useState(\"Sell\");\n  const [ChargeV2Balance, setChargeV2Balance] = useState(0);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleChange = (event) => {\n    setEventName(event.target.value);\n  };\n\n  const getReducer = useSelector((state) => state.UserReducer);\n  const { userPersonalBalance, userAccountAddress } = getReducer;\n  useEffect(() => {\n    setInterval(() => {\n      getContractTransferEventsByUser(eventName);\n    }, 300000);\n  }, []);\n  useEffect(() => {\n    getContractTransferEventsByUser(eventName);\n  }, [eventName]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [usdRate, setUsdRate] = useState(0);\n  const [price, setPrice] = useState(0);\n  useEffect(async () => {\n    await axios\n      .get(\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,TRX,IOT&tsyms=USD\"\n      )\n      .then((res) => {\n        const cryptos = res.data;\n\n        setUsdRate(cryptos[\"TRX\"].USD);\n      });\n  }, []);\n  const [rows, setRows] = useState([]);\n  const getContractTransferEventsByUser = async (eventName) => {\n    let result = [];\n    let tronGrid = new TronGrid(window?.tronWeb);\n    try {\n      let continueToken = \"\";\n      let contract = await window?.tronWeb?.contract().at(contractAddress);\n\n      let res2 = await contract.balanceOf(userAccountAddress).call();\n      let priceObj = await contract.price().call();\n      setPrice(priceObj?._hex / 1000000);\n\n      setChargeV2Balance(res2?.balance?._hex / 1000000);\n\n      let res = await tronGrid.contract.getEvents(contractAddress, {\n        only_confirmed: true,\n        event_name: eventName,\n        limit: 200,\n        filters: {\n          block_number: \"11671083\",\n        },\n      });\n      let newArr = [];\n      res &&\n        res.data &&\n        res.data.forEach((element) => {\n          if (\n            window?.tronWeb?.address?.fromHex(element?.result[1]) ===\n            userAccountAddress\n          ) {\n            newArr.push({\n              transaction_id: element?.transaction_id,\n              token: element?.result[0],\n              source: window?.tronWeb?.address?.fromHex(element?.result[1]),\n            });\n          }\n        });\n      setRows([...newArr]);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      return result;\n    }\n  };\n  const handleChangePage = (e, page) => {\n    console.log(e, page);\n    setPage(page);\n  };\n  const handleChangeRowsPerPage = (e) => {\n    setRowsPerPage(parseInt(e.target.value, 10));\n  };\n  return (\n    <>\n      <Grid\n        container\n        className={classes.root}\n        spacing={3}\n        style={{ width: \"100%\" }}\n      >\n        <Grid item xs={12} sm={6} lg={6}>\n          <Paper className={classes.card}>\n            <div className={classes.left}>\n              <div className={classes.buyIcon}>\n                <IconButton className={classes.outlineBtn} onClick={handleOpen}>\n                  <ShoppingBasketIcon className=\"white\" />\n                </IconButton>\n              </div>\n            </div>\n            <div className={classes.right}>\n              <p className=\"margin-none white\">Total ChargeV2 Balance</p>\n              <h6 className=\"white\">\n                {ChargeV2Balance ? ChargeV2Balance : 0} ChargeV2 ($\n                {price && ChargeV2Balance\n                  ? parseFloat(ChargeV2Balance * (price * usdRate)).toFixed(5)\n                  : 0}\n                )\n              </h6>\n              <p className=\"margin-none small-para white\">\n                Selling Fast, Buy Now\n              </p>\n            </div>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} sm={6} lg={6}>\n          <Paper className={classes.card}>\n            <div className={classes.left}>\n              <div className={classes.buyIcon}>\n                <IconButton className={classes.outlineBtn} onClick={handleOpen}>\n                  <ShoppingBasketIcon className=\"white\" />\n                </IconButton>\n              </div>\n            </div>\n            <div className={classes.right}>\n              <p className=\"margin-none white\">Buy</p>\n              <div className={classes.buyTokens}>\n                <h5 className=\"white\">ChargeV2 Tokens</h5>\n                {/* <Button className={classes.button} onClick={handleOpen}>\n                  Buy\n                </Button> */}\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <div className={classes.dropDown}>\n            <FormControl className={classes.selectBox}>\n              <Select\n                labelId=\"demo-customized-select-label\"\n                id=\"demo-customized-select\"\n                value={eventName}\n                onChange={handleChange}\n              >\n                <MenuItem value=\"Sell\">Sell Tokens</MenuItem>\n                <MenuItem value=\"Buy\">Buy Tokens</MenuItem>\n                <MenuItem value=\"Withdrawan\">Withdraw Tokens</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <Box className={classes.tableBox}>\n            <TableContainer\n              component={Paper}\n              className={classes.tableTransparnet}\n            >\n              <Table\n                className={classes.table}\n                aria-label=\"custom pagination table\"\n              >\n                <TableHead className={classes.tableHeader}>\n                  <TableRow>\n                    <TableCell style={{ color: \"white\" }}>\n                      Transaction ID\n                    </TableCell>\n                    <TableCell style={{ color: \"white\" }}>Source</TableCell>\n                    <TableCell style={{ color: \"white\" }}>Token</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody className={classes.tableBody}>\n                  {rows &&\n                    rows\n                      .slice(\n                        page * rowsPerPage,\n                        page * rowsPerPage + rowsPerPage\n                      )\n                      .map((row) => (\n                        <TableRow key={row.transaction_id}>\n                          <TableCell style={{ color: \"white\" }} scope=\"row\">\n                            {row.transaction_id.slice(0, 8) +\n                              \"...\" +\n                              row.transaction_id.slice(56, 64)}\n                          </TableCell>\n                          <TableCell style={{ color: \"white\" }} align=\"left\">\n                            {row.source}\n                          </TableCell>\n                          <TableCell style={{ color: \"white\" }} align=\"left\">\n                            {row.token / 1000000}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                </TableBody>\n                <TableFooter>\n                  <TableRow>\n                    <TablePagination\n                      style={{ color: \"white\" }}\n                      rowsPerPageOptions={[5, 10, 25]}\n                      colSpan={3}\n                      count={rows.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      SelectProps={{\n                        inputProps: { \"aria-label\": \"rows per page\" },\n                        native: true,\n                      }}\n                      onChangePage={handleChangePage}\n                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                  </TableRow>\n                </TableFooter>\n              </Table>\n            </TableContainer>\n          </Box>\n        </Grid>\n      </Grid>\n      <BuyPopup open={open} handleClose={handleClose} />\n    </>\n  );\n}\n\nexport default Transactions;\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles2();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <LastPage style={{ color: \"white\" }} />\n        ) : (\n          <FirstPage style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight style={{ color: \"white\" }} />\n        ) : (\n          <KeyboardArrowLeft style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft style={{ color: \"white\" }} />\n        ) : (\n          <KeyboardArrowRight style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <FirstPage style={{ color: \"white\" }} />\n        ) : (\n          <LastPage style={{ color: \"white\" }} />\n        )}\n      </IconButton>\n    </div>\n  );\n}\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 20,\n    paddingRight: \"5px\",\n    width: \"100%\",\n  },\n  card: {\n    borderRadius: 0,\n    backgroundSize: \"cover\",\n    backgroundColor: \"#222a31\",\n    width: \"100%\",\n    padding: 10,\n    height: \"auto\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  paper: {\n    backgroundColor: \"transparent\",\n    border: 0,\n  },\n  left: {\n    backgroundColor: \"#08d765\",\n    height: 90,\n    width: 90,\n    borderRadius: 0,\n  },\n  right: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginLeft: 20,\n  },\n  tableBox: {\n    borderRadius: 20,\n    backgroundSize: \"cover\",\n    backgroundColor: \"#222a31\",\n    // padding: 25\n  },\n  btn: {\n    backgroundColor: \"#1282C2\",\n    borderRadius: 20,\n    fontSize: 10,\n    float: \"right\",\n    color: \"white\",\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#1282C2\",\n    },\n  },\n  top: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderBottom: \"2px solid #08d765\",\n    padding: 25,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableTransparnet: {\n    padding: 25,\n    borderRadius: 20,\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.03)\",\n    background: `linear-gradient(90deg, rgba(57,55,62,1) 26%, rgba(54,73,108,1) 53%, rgba(28,35,47,1) 84%)`,\n    backgroundColor: \"#00ffe954\",\n    backgroundSize: \"cover\",\n    // backgroundColor: \"#326BB1\",\n  },\n  buyTokens: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  button: {\n    color: \"#00ffe9\",\n    border: \"1px solid #00ffe9\",\n    marginLeft: 20,\n    fontWeight: \"bold\",\n    padding: 1,\n    \"&:focus\": {\n      color: \"black\",\n      border: \"1px solid #00ffe9\",\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      color: \"black\",\n      border: \"1px solid #00ffe9\",\n      outline: \"none\",\n      boxShadow: \"none\",\n      backgroundColor: \"#00ffe9\",\n    },\n  },\n  stackBox: {\n    backgroundColor: \"#222a31\",\n    color: \"#00FFD2\",\n    padding: 15,\n    borderRadius: 15,\n  },\n  field: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    backgroundColor: \"#132660\",\n    border: \"1px solid #00FFD2\",\n    width: \"100%\",\n  },\n  fieldLeft: {\n    color: \"white\",\n    paddingTop: 9,\n    paddingLeft: 8,\n    paddingRight: 8,\n    fontSize: 11,\n    width: 150,\n  },\n  tableContainer: {\n    padding: 40,\n  },\n  fieldRight: {\n    width: \"79.2%\",\n    backgroundColor: \"#132660\",\n    borderLeft: \"1px solid #00FFD2\",\n    color: \"white\",\n    paddingLeft: 10,\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n  bottomBox: {\n    backgroundColor: \"#17A2B8\",\n    color: \"white\",\n    padding: \"1px 8px\",\n    borderRadius: 5,\n  },\n  clearBtn: {\n    backgroundColor: \"#D33949\",\n    color: \"white\",\n    borderRadius: 20,\n    marginTop: 10,\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#D33949\",\n    },\n  },\n  withDrawBtn: {\n    // background: \"linear-gradient(90deg, #132660 10%, #0062cc 90%)\",\n    backgroundSize: \"200% 100%\",\n    width: \"100%\",\n    padding: 15,\n    color: \"white\",\n    borderRadius: 0,\n    backgroundColor: \"#08d765\",\n    marginTop: 10,\n    marginLeft: 10,\n    \"&:focus\": {\n      outline: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n}));\n","import { Grid, Paper, Typography, Box, Button } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { useStyles } from \"./styles\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { contractAddress } from \"../../utils/constants\";\nimport axios from \"axios\";\nfunction WithDraw() {\n  const classes = useStyles();\n  const getReducer = useSelector((state) => state.UserReducer);\n\n  const {\n    metaMaskDecentralized,\n    userAccountAddress,\n    stakingDcentralized,\n  } = getReducer;\n\n  const [withdrawRef, setWithdrawRef] = useState(0);\n  const [totalReward, setTotalReward] = useState(0);\n  const [totalWithdrawn, setTotalWithdrawn] = useState(0);\n\n  const [\n    bonusBalanceAndAvailableRefReward,\n    setBonusBalanceAndAvailableRefReward,\n  ] = useState(0);\n\n  const [usdRate, setUsdRate] = useState(0);\n  const [price, setPrice] = useState(0);\n  useEffect(async () => {\n    await axios\n      .get(\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,TRX,IOT&tsyms=USD\"\n      )\n      .then((res) => {\n        const cryptos = res.data;\n\n        setUsdRate(cryptos[\"TRX\"].USD);\n      });\n  }, []);\n  const BuyTokenFunction = async () => {\n    if (metaMaskDecentralized && userAccountAddress && stakingDcentralized) {\n      try {\n        let contract = await window?.tronWeb?.contract().at(contractAddress);\n        let res = await contract\n          .getUserReferralBonus(userAccountAddress)\n          .call();\n        let contract1 = await window?.tronWeb?.contract().at(contractAddress);\n        let priceObj = await contract1.price().call();\n        setPrice(priceObj?._hex / 1000000);\n        let refusers = await contract.refusers(userAccountAddress).call();\n        let userDiv = await contract\n          .getUserDividends(userAccountAddress)\n          .call();\n\n        let UWithdraw = await contract\n          .getUserTotalWithdrawn(userAccountAddress)\n          .call();\n\n        setTotalReward(userDiv?._hex / 1000000);\n        setTotalWithdrawn(UWithdraw?._hex / 1000000);\n        setWithdrawRef(refusers?.withdrawRef?._hex / 1000000);\n        setBonusBalanceAndAvailableRefReward(res?._hex / 1000000);\n      } catch (error) {\n        toast.error(error);\n      }\n    }\n  };\n  //\n  React.useEffect(() => {\n    BuyTokenFunction();\n  }, []);\n  React.useEffect(() => {\n    if (localStorage.getItem(\"reload\")) {\n      setTimeout(() => {\n        BuyTokenFunction();\n        localStorage.setItem(\"reload\", false);\n      }, 3000);\n    }\n  }, [localStorage.getItem(\"reload\")]);\n  React.useEffect(() => {\n    BuyTokenFunction();\n  }, [metaMaskDecentralized, userAccountAddress, stakingDcentralized]);\n\n  const WithDrawStake = async () => {\n    if (metaMaskDecentralized && userAccountAddress && stakingDcentralized) {\n      try {\n        let contracts = await window?.tronWeb?.contract().at(contractAddress);\n\n        contracts\n          .withdraw()\n          .send({ shouldPollResponse: true })\n          .then((output) => {\n            BuyTokenFunction();\n            toast.success(\"Your transaction has been confirmed\");\n            localStorage.setItem(\"reload\", true);\n          })\n          .catch((e) => {\n            BuyTokenFunction();\n            toast.error(e.message);\n\n            localStorage.setItem(\"reload\", true);\n          });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  const WithdrawRefReward = async () => {\n    if (metaMaskDecentralized && userAccountAddress && stakingDcentralized) {\n      try {\n        let contracts = await window?.tronWeb?.contract().at(contractAddress);\n\n        contracts\n          .withdrawRefferalReward()\n          .send({ shouldPollResponse: true })\n          .then((output) => {\n            BuyTokenFunction();\n            toast.success(\"Your transaction has been confirmed\");\n            localStorage.setItem(\"reload\", true);\n          })\n          .catch((e) => {\n            BuyTokenFunction();\n            toast.error(e.message);\n            localStorage.setItem(\"reload\", true);\n          });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Grid container className={classes.root} spacing={3}>\n        <Grid item xs={12} sm={6} lg={6}>\n          <Paper className={classes.card}>\n            <div className={classes.left}></div>\n            <div className={classes.right}>\n              <p className=\"margin-none white\">Available Rewards</p>\n              <h6 className=\"white\">\n                {totalReward ? parseFloat(totalReward).toFixed(3) : 0} ChargeV2\n                &nbsp;($\n                {price && totalReward\n                  ? parseFloat(totalReward * (price * usdRate)).toFixed(5)\n                  : 0}\n                )\n              </h6>\n              <p className=\"margin-none small-para white\">\n                Total Earned Rewards: {totalWithdrawn ? totalWithdrawn : 0}{\" \"}\n                ChargeV2 &nbsp;($\n                {price && totalWithdrawn\n                  ? parseFloat(totalWithdrawn * (price * usdRate)).toFixed(5)\n                  : 0}\n                )\n              </p>\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <Paper className={classes.card}>\n            <div className={classes.left}></div>\n            <div className={classes.right}>\n              <p className=\"margin-none white\">Available Commissions</p>\n              <h5 className=\"white\">\n                {bonusBalanceAndAvailableRefReward\n                  ? bonusBalanceAndAvailableRefReward\n                  : 0}{\" \"}\n                ChargeV2 &nbsp;($\n                {price && bonusBalanceAndAvailableRefReward\n                  ? parseFloat(\n                      bonusBalanceAndAvailableRefReward * (price * usdRate)\n                    ).toFixed(5)\n                  : 0}\n                )\n              </h5>\n              <p className=\"margin-none small-para white\">\n                Total Earned Commissions: {withdrawRef ? withdrawRef : 0}{\" \"}\n                ChargeV2 &nbsp;($\n                {price && withdrawRef\n                  ? parseFloat(withdrawRef * (price * usdRate)).toFixed(5)\n                  : 0}\n                )\n              </p>\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Box className={classes.tableBox}>\n            <div className={classes.top}>\n              <h6 className=\"white\">Withdraw Stake Earnings</h6>\n              <Button className={classes.btn}>Active</Button>\n            </div>\n            <Grid container spacing={3} className={classes.tableContainer}>\n              <Grid item xs={12} lg={6}>\n                <div className={classes.stackBox}>\n                  <div>\n                    <div style={{ marginTop: 10, marginBottom: 10 }}>\n                      <Typography variant=\"span\" style={{ fontSize: 20 }}>\n                        Total Available to Withdrawn:{\" \"}\n                        <b style={{ color: \"white\" }}>\n                          {totalReward ? parseFloat(totalReward).toFixed(3) : 0}{\" \"}\n                          ChargeV2 &nbsp;($\n                          {price && totalReward\n                            ? parseFloat(\n                                totalReward * (price * usdRate)\n                              ).toFixed(5)\n                            : 0}\n                          )\n                        </b>\n                      </Typography>\n                    </div>\n                    <div\n                      style={{ fontSize: 20, marginTop: 10, marginBottom: 10 }}\n                    >\n                      <Typography variant=\"span\">\n                        Total Withdrawn:{\" \"}\n                        <b style={{ color: \"white\" }}>\n                          {totalWithdrawn ? totalWithdrawn : 0} ChargeV2\n                          &nbsp;($\n                          {price && totalWithdrawn\n                            ? parseFloat(\n                                totalWithdrawn * (price * usdRate)\n                              ).toFixed(5)\n                            : 0}\n                          )\n                        </b>\n                      </Typography>\n                    </div>\n                  </div>\n                </div>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                lg={6}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                {/* <div>\n                <div className={classes.field}>\n                  <p className={classes.fieldLeft}>Amount to withdraw</p>\n                  <input\n                    type=\"number\"\n                    className={classes.fieldRight}\n                    value=\"0\"\n                  />\n                </div>\n                <div style={{ float: \"right\" }}>\n                  <small className={clsx(classes.bottomBox, \"small-num\")}>\n                    Withdrawal fee: 1 WAVE\n                  </small>\n                  <small className={clsx(classes.bottomBox, \"small-num\")}>\n                    Amount to receive: NaN WAVE\n                  </small>\n                </div>\n              </div> */}\n                <Box\n                  display=\"flex\"\n                  flexDirection=\"row\"\n                  alignItems=\"center\"\n                  width=\"100%\"\n                >\n                  {/* <Button className={classes.clearBtn}>Clear</Button> */}\n                  <Button\n                    className={classes.withDrawBtn}\n                    onClick={WithDrawStake}\n                  >\n                    WithDraw Stake Earning\n                  </Button>\n                </Box>\n              </Grid>\n              <Grid item lg={6}>\n                <small className=\"white\">\n                  A Withdrawal fee of 1 ChargeV2 will be deducted.\n                </small>\n              </Grid>\n            </Grid>\n            {/* </Box> */}\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box className={classes.tableBox}>\n            <div className={classes.top}>\n              <h6 className=\"white\">Withdraw Referrals Rewards</h6>\n              <Button className={classes.btn}>Active</Button>\n            </div>\n            <Grid container spacing={3} className={classes.tableContainer}>\n              <Grid item xs={12} lg={6}>\n                <div className={classes.stackBox}>\n                  <div>\n                    <div style={{ marginTop: 10, marginBottom: 10 }}>\n                      <Typography variant=\"span\" style={{ fontSize: 20 }}>\n                        Total Available to Withdrawn:{\" \"}\n                        <b style={{ color: \"white\" }}>\n                          {/* getUserReferralBonus */}\n                          {bonusBalanceAndAvailableRefReward\n                            ? bonusBalanceAndAvailableRefReward\n                            : 0}{\" \"}\n                          ChargeV2 &nbsp;($\n                          {price && bonusBalanceAndAvailableRefReward\n                            ? parseFloat(\n                                bonusBalanceAndAvailableRefReward *\n                                  (price * usdRate)\n                              ).toFixed(5)\n                            : 0}\n                          )\n                        </b>\n                      </Typography>\n                    </div>\n                    <div\n                      style={{ fontSize: 20, marginTop: 10, marginBottom: 10 }}\n                    >\n                      <Typography variant=\"span\">\n                        Total Withdrawn:{\" \"}\n                        <b style={{ color: \"white\" }}>\n                          {/*refusers withdrawRef */}\n                          {withdrawRef ? withdrawRef : 0} ChargeV2 &nbsp;($\n                          {price && withdrawRef\n                            ? parseFloat(\n                                withdrawRef * (price * usdRate)\n                              ).toFixed(5)\n                            : 0}\n                          )\n                        </b>\n                      </Typography>\n                    </div>\n                  </div>\n                </div>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                lg={6}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                {/* <div>\n                <div className={classes.field}>\n                  <p className={classes.fieldLeft}>Amount to withdraw</p>\n                  <input\n                    type=\"number\"\n                    className={classes.fieldRight}\n                    value=\"0\"\n                  />\n                </div>\n                <div style={{ float: \"right\" }}>\n                  <small className={clsx(classes.bottomBox, \"small-num\")}>\n                    Withdrawal fee: 1 WAVE\n                  </small>\n                  <small className={clsx(classes.bottomBox, \"small-num\")}>\n                    Amount to receive: NaN WAVE\n                  </small>\n                </div>\n              </div> */}\n                <Box display=\"flex\" flexDirection=\"row\" width=\"100%\">\n                  {/* <Button className={classes.clearBtn}>Clear</Button> */}\n                  <Button\n                    className={classes.withDrawBtn}\n                    onClick={WithdrawRefReward}\n                  >\n                    {/* withdrawRefferalReward */}\n                    WithDraw Referral Reward\n                  </Button>\n                </Box>\n              </Grid>\n              <Grid item lg={6}>\n                <small className=\"white\">\n                  A Withdrawal fee of 1 ChargeV2 will be deducted.\n                </small>\n              </Grid>\n            </Grid>\n            {/* </Box> */}\n          </Box>\n        </Grid>\n      </Grid>\n      {/* <PausedTable /> */}\n    </>\n  );\n}\n\nexport default WithDraw;\n","import React from \"react\";\nimport Layout from \"./components/layout/layout\";\nimport { Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Stacks from \"./components/stacks/stacks\";\nimport Wallet from \"./components/wallet\";\nimport Swaping from \"./components/Swaping/index\";\nimport Transactions from \"./components/transactions\";\nimport WithDraw from \"./components/withdraw\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport { FaHandHoldingUsd, FaWallet } from \"react-icons/fa\";\nimport { BiTransfer } from \"react-icons/bi\";\nimport { MdSecurity } from \"react-icons/md\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport store from \"./redux/store\";\nimport { useSelector } from \"react-redux\";\nimport { TotalRewardsFunction } from \"./userDataFunctions\";\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\n\n/**\n * @author\n * @function DashboardRoutes\n **/\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    backgroundColor: \"#222a31 !important\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: \"#222a31\",\n    boxShadow: \"0px 4px 8px #04041747 !important\",\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  dashboardBackGroundColor: {\n    backgroundColor: \"#222a31 !important\",\n    color: \"white\",\n  },\n\n  DeawerColor: {\n    color: \"white\",\n  },\n}));\n\nconst DashboardRoutes = (props) => {\n  const { path } = props.match;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n  const { pathname } = history.location;\n  const matches = useMediaQuery(\"(max-width:960px)\");\n  const getReducer = useSelector((state) => state.UserReducer);\n  const {\n    isUserAuthenticated,\n    metaMaskDecentralized,\n    userAccountAddress,\n    stakingDcentralized,\n  } = getReducer;\n\n  const links = [\n    {\n      title: \"Dashboard\",\n      to: \"/\",\n      name: \"Dashboard\",\n      icon: <DashboardIcon fontSize=\"large\" />,\n    },\n    {\n      title: \"Stakes\",\n      to: \"/stakes\",\n      name: \"Stakes\",\n      icon: <MdSecurity style={{ fontSize: \"30px\" }} />,\n    },\n    {\n      title: \"Transactions\",\n      to: \"/transactions\",\n      name: \"Transactions\",\n      icon: <BiTransfer style={{ fontSize: \"30px\" }} />,\n    },\n\n    {\n      title: \"Withdraw\",\n      to: \"/withdraw\",\n      name: \"Withdraw\",\n      icon: <FaHandHoldingUsd style={{ fontSize: \"30px\" }} />,\n    },\n\n    {\n      title: \"Wallet\",\n      to: \"/wallet\",\n      name: \"Wallet\",\n      icon: <FaWallet style={{ fontSize: \"30px\" }} />,\n    },\n    {\n      title: \"Swaping\",\n      to: \"/swaping\",\n      name: \"Swaping\",\n      icon: <SwapHorizIcon style={{ fontSize: \"30px\" }} />,\n    },\n\n    {\n      title: \"Logout\",\n      name: \"Logout\",\n      icon: <ExitToAppIcon style={{ fontSize: \"30px\" }} />,\n      onClick: \"\",\n    },\n  ];\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"_DTL_LOGIN_ADDRESS\");\n    localStorage.removeItem(\"ref\");\n    store.dispatch({\n      type: \"LOGOUT\",\n    });\n    history.push(\"/\");\n  };\n\n  React.useEffect(() => {\n    if (isUserAuthenticated) {\n      setInterval(() => {\n        TotalRewardsFunction(\n          userAccountAddress,\n          stakingDcentralized,\n          metaMaskDecentralized\n        );\n      }, 5000);\n    }\n  }, [\n    isUserAuthenticated,\n    metaMaskDecentralized,\n    userAccountAddress,\n    stakingDcentralized,\n  ]);\n\n  return (\n    <div className={classes.root}>\n      <Hidden smDown>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, {\n                [classes.hide]: open,\n              })}\n            >\n              <MenuIcon className={classes.DeawerColor} />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx(classes.dashboardBackGroundColor, {\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"rtl\" ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon style={{ color: \"white\" }} />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <div style={{ height: \"75%\" }}>\n            <List>\n              {links.map((text, index) => (\n                <>\n                  <Link\n                    to={text.to}\n                    style={{ textDecoration: \"none\", color: \"white\" }}\n                  >\n                    <ListItem\n                      button\n                      key={text.name}\n                      onClick={() => text.name === \"Logout\" && handleLogout()}\n                    >\n                      <ListItemIcon\n                        style={{\n                          color: pathname === text.to ? \"#08d765\" : \"white\",\n                        }}\n                      >\n                        {text.icon}\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={text.name}\n                        style={{\n                          color: pathname === text.to ? \"#08d765\" : \"white\",\n                        }}\n                      />\n                    </ListItem>\n                  </Link>\n                  <Divider />\n                </>\n              ))}\n            </List>\n          </div>\n          <div style={{ textAlign: \"center\" }}>\n            <img\n              src=\"/logo.png\"\n              style={{ maxWidth: 60, borderRadius: \"50%\" }}\n            />\n            <br />\n            <span style={{ fontSize: 10 }}>\n              &copy; copyright {new Date().getFullYear()}\n            </span>\n          </div>\n        </Drawer>\n      </Hidden>\n      <main className={classes.content} style={{ width: \"100%\" }}>\n        {matches ? (\n          <div\n            style={{ textAlign: \"center\", width: \"100%\", paddingBottom: 20 }}\n          >\n            <img\n              src=\"/logo2.jpeg\"\n              style={{ height: 50, borderRadius: \"50%\" }}\n            />\n          </div>\n        ) : (\n          <div className={classes.toolbar} />\n        )}\n        <Layout>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/stakes\" component={Stacks} />\n          <Route path=\"/swaping\" component={Swaping} />\n          <Route path=\"/wallet\" component={Wallet} />\n          <Route path=\"/transactions\" component={Transactions} />\n          <Route path=\"/withdraw\" component={WithDraw} />\n        </Layout>\n      </main>\n    </div>\n  );\n};\n\nexport default DashboardRoutes;\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport store from \"../../redux/store\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n// import { environment } from \"../../environment\";\nimport { getUserData } from \"../../userDataFunctions\";\nimport { toast } from \"react-toastify\";\nimport TronHelper from \"../../utils/TronHelper\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./index.css\";\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(12),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n\n  SignUpColor: {\n    background: \"#636057\",\n    boxShadow: \"2\",\n    borderRadius: \"6\",\n    color: \"#eae8e7\",\n    textAlign: \"center\",\n    padding: \"4rem\",\n    mt: \"3rem\",\n    borderRadius: \"20px\",\n  },\n  SignUp_boxButton: {\n    transition: \"all 0.20s ease-in-out\",\n    backgroundColor: \"#08d765 !important\",\n    // backgroundImage: \"linear-gradient(45deg,#08d765 0%, #08d765 100%)\",\n    // boxShadow:\n    //   \"0 3px 6px rgba(0, 0, 0, .3), inset 0 0 10px 3px rgba(0, 0, 0, .2), 0 3px 20px #f6597282, 0 3px 35px rgba(250, 95, 59, 0.48)\",\n    border: \"0\",\n    outline: \"0\",\n    position: \"relative\",\n    backgroundSize: \"100% 100%\",\n    borderRadius: \"100px\",\n    fontSize: \"1.3rem\",\n    lineHeight: \"1.6rem\",\n    fontFamily: \"Source Code Pro\",\n    borderRadius: \"2px solid blue\",\n  },\n}));\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [loader, setLoader] = React.useState(false);\n  const getReducer = useSelector((state) => state.UserReducer);\n  const {\n    isUserAuthenticated,\n    metaMaskDecentralized,\n    userAccountAddress,\n  } = getReducer;\n\n  React.useEffect(() => {\n    if (isUserAuthenticated) {\n      history.push(`/`);\n    }\n  }, [isUserAuthenticated]);\n  const contractAddress = \"TRpndMFBy2Xn38PvYfRNmUfKxBZt4svSiH\";\n  async function Ethereum() {\n    let mainAccount = \"\";\n\n    if (\n      window.tronWeb &&\n      window.tronWeb.defaultAddress.base58 === \"undefined\"\n    ) {\n    } else {\n    }\n    mainAccount = await window?.tronWeb?.defaultAddress?.base58;\n\n    if (mainAccount) {\n      history.push(\"/\");\n      setLoader(false);\n      localStorage.setItem(\"_DTL_LOGIN_ADDRESS\", mainAccount);\n      store.dispatch({\n        type: \"USER_AUTHENTICATED\",\n      });\n      store.dispatch({\n        type: \"USER_METAMASK_ACCOUNT\",\n        payload: mainAccount,\n      });\n      store.dispatch({\n        type: \"METAMASK_STAKING_DCENTRALIZED\",\n        payload: mainAccount,\n      });\n      store.dispatch({\n        type: \"METAMASK_DECENTRALIZED\",\n        payload: mainAccount,\n      });\n    } else {\n      toast.warning(\"Please login or install tron wallet!\");\n      setLoader(false);\n    }\n  }\n\n  const LoginFunction = async () => {\n    setLoader(true);\n    await Ethereum();\n  };\n  React.useEffect(() => {\n    const url = new URL(props?.name);\n    let params = new URLSearchParams(url?.search);\n    let q = params.get(\"ref\");\n    console.log(\"ref url\", q);\n    if (q) {\n      localStorage.setItem(\"ref\", q);\n    }\n  }, []);\n  return (\n    <div style={{ backgroundColor: \"#222a31\", height: \"50rem\" }}>\n      <Container lg={12} maxWidth=\"md\">\n        <Box textAlign=\"center\" padding=\"2rem\">\n          <img\n            src=\"/logo-2.png\"\n            className=\"register-logo\"\n            style={{ backgroundColor: \"#fff\" }}\n          />\n        </Box>\n\n        <Box className={classes.SignUpColor} mt=\"2rem\">\n          <Typography variant=\"h3\" component=\"h4\">\n            Sign In to Enter\n          </Typography>\n          <Typography>Connect to Tron Wallet</Typography>\n          <div className=\"login-space-line\"></div>\n\n          <div className=\"Wallet_Button\">\n            {loader ? (\n              <button className={classes.SignUp_boxButton}>\n                <Typography\n                  variant=\"h5\"\n                  component=\"h5\"\n                  style={{ fontSize: \"1rem\" }}\n                >\n                  Loading...\n                </Typography>\n              </button>\n            ) : (\n              <button\n                className={classes.SignUp_boxButton}\n                onClick={LoginFunction}\n              >\n                <Typography\n                  variant=\"h5\"\n                  component=\"h5\"\n                  style={{ fontSize: \"1rem\" }}\n                >\n                  Connect to the wallet\n                </Typography>\n              </button>\n            )}\n          </div>\n\n          <div className=\"login-space-line\"></div>\n\n          <Box>\n            <Typography\n              variant=\"h5\"\n              component=\"h5\"\n              style={{ fontSize: \"1rem\" }}\n            >\n              {\" \"}\n              Connect to Your wallet to enter the dashboard.{\" \"}\n            </Typography>\n          </Box>\n        </Box>\n      </Container>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Route, Redirect, useParams } from \"react-router-dom\";\nimport DashboardRoutes from \"./DashboardRoutes\";\nimport { useSelector } from \"react-redux\";\nimport Login from \"./components/Register/SignIn\";\nimport store from \"./redux/store\";\n\n/**\n * @author\n * @function MainApp\n **/\n\nconst AuthRoute = ({ component: Component, authUser, ...rest }) => {\n  const parm = useParams();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !authUser ? (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              // state: { from: props.location },\n            }}\n          />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nconst MainApp = (props) => {\n  const getReducer = useSelector((state) => state.UserReducer);\n  const { isUserAuthenticated, currentUserStatus } = getReducer;\n\n  const [metaMastAcc, setMetaMaskAcc] = useState();\n  const [dcentralized, setDcentralized] = useState();\n\n  const contractAddress = \"TRpndMFBy2Xn38PvYfRNmUfKxBZt4svSiH\";\n\n  async function Read() {\n    let contract = await window?.tronWeb?.contract()?.at(contractAddress);\n    let rewards = await contract?.methods?.turnover()?.call();\n  }\n\n  const getCurrentWallet = async () => {\n    try {\n      let getWalletAddress = await localStorage.getItem(\"_DTL_LOGIN_ADDRESS\");\n      if (dcentralized && metaMastAcc) {\n        store.dispatch({\n          type: \"USER_AUTHENTICATED\",\n        });\n      } else if (!getWalletAddress) {\n        store.dispatch({\n          type: \"AUTHENTICATED_FAILED\",\n        });\n      } else if (metaMastAcc && metaMastAcc != getWalletAddress) {\n        store.dispatch({\n          type: \"AUTHENTICATED_FAILED\",\n        });\n      }\n    } catch (err) {\n      store.dispatch({\n        type: \"AUTHENTICATED_FAILED\",\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    getCurrentWallet();\n\n    // eslint-disable-next-line\n  }, [dcentralized, metaMastAcc]);\n\n  return (\n    <>\n      <Route\n        path=\"/login/:id\"\n        component={() =>\n          isUserAuthenticated ? (\n            <Redirect to=\"/\" />\n          ) : (\n            <Login name={window.location.href} />\n          )\n        }\n      />\n      <Route\n        path=\"/login\"\n        component={() =>\n          isUserAuthenticated ? (\n            <Redirect to=\"/\" />\n          ) : (\n            <Login name={window.location.href} />\n          )\n        }\n      />\n\n      <AuthRoute\n        // exact\n        path=\"/\"\n        authUser={isUserAuthenticated}\n        component={DashboardRoutes}\n      />\n    </>\n  );\n};\n\nexport default MainApp;\n","import React from \"react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport MainApp from \"./mainApp\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#ffff\",\n    },\n    secondary: {\n      main: \"#B01F2C\",\n    },\n    borderColors: {\n      main: \"#32ADCF\",\n    },\n  },\n});\n\nfunction App() {\n  React.useEffect(() => {\n    if (window.location.href.includes(\"?ref=\")) {\n      let getAddress = window.location.href.split(\"?ref=\")[1];\n      let final = getAddress.slice(0, 42);\n      localStorage.setItem(\"_ChargeV2_REF_ADD\", final);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <ToastContainer />\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <MainApp />\n          </Router>\n        </Provider>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CssBaseline } from '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}